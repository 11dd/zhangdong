<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[至尊宝典之备忘录]]></title>
  <link href="www.freefook.com/atom.xml" rel="self"/>
  <link href="www.freefook.com/"/>
  <updated>2018-12-13T13:21:02+08:00</updated>
  <id>www.freefook.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im">MWeb</generator>

  
  <entry>
    <title type="html"><![CDATA[电子证照]]></title>
    <link href="www.freefook.com/15444188311660.html"/>
    <updated>2018-12-10T13:13:51+08:00</updated>
    <id>www.freefook.com/15444188311660.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">一、国家新发布的电子证照六项规范：</h4>

<p>电子证照是指由各单位依法出具的、<br/>
具有法律效力的各类证照、证明、批文、鉴定报告、办事结果等文件，<br/>
比如有身份证、结婚证、银行还款流水证明、营业执照等。</p>

<p>2018年11月16日，国家正式发布6项国家标准<br/>
《电子证照 总体技术架构》<br/>
《电子证照 目录信息规范》<br/>
《电子证照 元数据规范》<br/>
《电子证照 标识规范》<br/>
《电子证照 文件技术要求》<br/>
《电子证照 共享服务接口规范》</p>

<p>电子证照应用的总体技术框架、统一的证照分类规则和证照基础信息，<br/>
有助于推动实现全国“一网通办”，让政务信息资源共享和服务更顺畅，<br/>
让百姓切实感受办事更便捷。<br/>
该系列标准将于2019年1月1日起实施。 </p>

<h4 id="toc_1">二、电子证照实施问题？ </h4>

<p>首先明确一点电子证照要赋予与纸质证照具有同等法律效力(出台相关法律法规)</p>

<p>做这套系统基本的点</p>

<ol>
<li>电子证照的信息</li>
<li>电子证照的生成(防伪造、防篡改)</li>
<li>电子证照的颁发</li>
<li>电子证照的查询</li>
<li>电子证照的修改</li>
<li>电子证照的作废(过期失效)</li>
<li>电子证照的共享</li>
<li>电子证照的验证(元数据核对,真伪验证,管理状态核对)</li>
<li>电子证照的管理</li>
<li>电子证照的安全</li>
<li>电子证照持续服务能力(对外提供证照共享服务)</li>
<li>电子证照要跨部门，跨行业，跨区域的统筹</li>
<li>电子证照管理平台，统一管理和统一存储汇聚</li>
<li>电子证照跨层级管理机制，实现各类证照的全局管理和分类管理</li>
<li>电子证照形成区域内共享和同步机制，支撑各级政府服务并联审批和业务协同</li>
</ol>

<p>卫士通方案图（新标准起草单位之一成都卫士通信息产业股份有限公司）</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8A%E5%8D%8811.27.41.png.png" alt="屏幕快照 2018-12-10 上午11.27.41.png"/></p>

<blockquote>
<p>签发管理系统：使用各种方式对存量证照和新增证照数据进行采集，<br/>
基于证照元数据项及数字签名，制作数字格式电子证照，随后选取证照模板，<br/>
嵌套版式格式，利用<strong>电子印章</strong>服务，<br/>
制作生成<strong>OFD</strong>版式证照电子文件，满足证照签发需求；</p>

<p>共享存储系统：电子文件可通过共享存储系统存入电子证照库，<br/>
进行数据汇聚，满足数据管理要求；<br/>
通过共享存储系统与上级电子证照库及平级政务服务数据库实现对接和数据同步，<br/>
满足跨地区、跨层级的证照汇聚和同步需求，</p>

<p>业务系统：可通过验证服务系统提交证照验证、查询、下载等各类请求，<br/>
满足证照使用需求</p>
</blockquote>

<h4 id="toc_2">三、六项规范要点分析</h4>

<h4 id="toc_3">总体技术架构</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104355_5sru8kqwkk.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104355_5sru8kqwkk.pdf</a></p>

<p>其中针对政务服务中的共享服务部署模式，<br/>
用于政务服务的电子证照系统一般分为：<br/>
国家级、省部级、地市级三级</p>

<p>地市级：电子证照共享服务，基于本地区证照库和下级服务的目录信息提供<br/>
所辖地域的电子证照检索，获取和验证等功能，<br/>
并将本级证照资源库的目录信息注册到省部级证照服务中。</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.06.35.png" alt="屏幕快照 2018-12-10 下午2.06.35"/></p>

<h4 id="toc_4">目录信息规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104416_r9inl86xws.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104416_r9inl86xws.pdf</a></p>

<p>其中<br/>
1. 证照定义机构<br/>
依据法律法规或服务事项定义证照或提供业务指导的机构<br/>
2. 证照颁发机构<br/>
依据法律法规或服务事项颁发证照的机构<br/>
3. 证照颁发机构级别<br/>
定义：可颁发该类型证件照的机构的最低行政级别<br/>
值域：国家级，省级，地市级，区县级，乡镇级，其他-缺省值为其他<br/>
4. 证照类型代码编码规则<br/>
采用“机构代码+机构内唯一码”编码方式</p>

<p>证照目录共享流程<br/>
<img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%883.04.32.png" alt="屏幕快照 2018-12-10 下午3.04.32"/></p>

<h4 id="toc_5">元数据规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104434_gl0ni7ejd8.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104434_gl0ni7ejd8.pdf</a></p>

<p>其中元数据信息模型</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.18.00.png" alt="屏幕快照 2018-12-10 下午2.18.00"/></p>

<p>基础信息：<br/>
证照名称，<br/>
证照类型代码，<br/>
证照编号，<br/>
证照唯一标识，<br/>
证照颁发机构(例如：大连市高新园区住房与建设委员会)，<br/>
证照颁发机构代码，<br/>
证照颁发日期，<br/>
持证主体，<br/>
持证主体代码，<br/>
持证主体代码类型，<br/>
持证主体代码类型代码，<br/>
证照有效期起始日期，<br/>
证照有效期截止日期，<br/>
业务信息，<br/>
加注件信息，<br/>
加注件制作时间，<br/>
加注件制作者(例如：大连市行政服务中心)，<br/>
加注件制作事由(安全生产许可证申请),<br/>
加注件有效期截止时间，<br/>
元数据扩展规则(参考元数据规范),</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.28.42.png" alt="屏幕快照 2018-12-10 下午2.28.42"/></p>

<h4 id="toc_6">标识规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104515_0ue9lxpgma.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104515_0ue9lxpgma.pdf</a></p>

<p>其中证照标识结构：<br/>
从左至右依次为：证照根代码-类型代码-颁发机构代码-流水号-版本号-校验位</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.34.13.png" alt="屏幕快照 2018-12-10 下午2.34.13"/></p>

<p>电子证照根代码取值固定为“1.2.156.3005.2”<br/>
校验位有统一的校验公式，请参考标识规范详情</p>

<h4 id="toc_7">文件技术要求</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104451_iq4x5vr0l6.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104451_iq4x5vr0l6.pdf</a></p>

<p>一、其中介绍了照面样式要求</p>

<p>二、其中电子证照需满足如下要求：<br/>
1. 使用OFD文件格式<br/>
2. 一个文件内只包含一个证照<br/>
3. 不使用动态元素，如动画音视频等等其他要求参考文档详情内容</p>

<p>三、其中介绍了对安全通用要求，原件和加注件的要求</p>

<h4 id="toc_8">共享服务接口规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104543_sf62k790i1.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104543_sf62k790i1.pdf</a></p>

<p>一、其中介绍应用场景和要求</p>

<p>例如：证照检索、<br/>
信息获取、<br/>
证照文件下载、<br/>
信息验证、<br/>
文件验证、<br/>
调用方认证、<br/>
权限控制、<br/>
等接口规范做了相关示例的入参，出参。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-TabBar]]></title>
    <link href="www.freefook.com/15235114845539.html"/>
    <updated>2018-04-12T13:38:04+08:00</updated>
    <id>www.freefook.com/15235114845539.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">创建一个标准小程序空项目</h4>

<h5 id="toc_1">在app.json文件里写入如下代码</h5>

<pre><code>{
  &quot;pages&quot;: [
    &quot;pages/homePage/homePage&quot;,
    &quot;pages/minePage/minePage&quot;,
    &quot;pages/shoppingCartPage/shoppingCartPage&quot;,
    &quot;pages/index/index&quot;
  ],
  &quot;window&quot;: {
    &quot;backgroundTextStyle&quot;: &quot;light&quot;,
    &quot;navigationBarBackgroundColor&quot;: &quot;#fff&quot;,
    &quot;navigationBarTitleText&quot;: &quot;小程序商城&quot;,
    &quot;navigationBarTextStyle&quot;: &quot;black&quot;
  },
  &quot;tabBar&quot;: {
    &quot;color&quot;: &quot;#8a8a8a&quot;,
    &quot;selectedColor&quot;: &quot;#000&quot;,
    &quot;backgroundColor&quot;: &quot;#fff&quot;,
    &quot;list&quot;: [
      {
        &quot;iconPath&quot;: &quot;images/tabbar/home_1.png&quot;,
        &quot;selectedIconPath&quot;: &quot;images/tabbar/home_2.png&quot;,
        &quot;pagePath&quot;: &quot;pages/homePage/homePage&quot;,
        &quot;text&quot;: &quot;首页&quot;
      },
      {
        &quot;iconPath&quot;: &quot;images/tabbar/gwc_1.png&quot;,
        &quot;selectedIconPath&quot;: &quot;images/tabbar/gwc_2.png&quot;,
        &quot;pagePath&quot;: &quot;pages/shoppingCartPage/shoppingCartPage&quot;,
        &quot;text&quot;: &quot;购物车&quot;
      },
      {
        &quot;iconPath&quot;: &quot;images/tabbar/wode_1.png&quot;,
        &quot;selectedIconPath&quot;: &quot;images/tabbar/wode_2.png&quot;,
        &quot;pagePath&quot;: &quot;pages/minePage/minePage&quot;,
        &quot;text&quot;: &quot;我的&quot;
      }
    ]
  },
  &quot;networkTimeout&quot;: {
    &quot;request&quot;: 10000,
    &quot;downloadFile&quot;: 10000
  },
  &quot;debug&quot;: false
}
</code></pre>

<h4 id="toc_2">运行界面 tabbar</h4>

<p><img src="media/15235114845539/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-06%20%E4%B8%8B%E5%8D%884.14.36.png" alt="屏幕快照 2018-12-06 下午4.14.36"/></p>

<h5 id="toc_3">在app.wxss文件里写入如下代码</h5>

<pre><code>page {
  font-size: 14px;
  background-color: #f8f8f8;
  font-family: -apple-system-font, Helvetica Neue, Helvetica, sans-serif;
}

.container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  box-sizing: border-box;
}

.weui-bg-color {
  background-color: #f8f8f8;
}

.weui-Font1 {
  font-size: 16px;
}

.weui-Font2 {
  font-size: 14px;
}

.weui-Font3 {
  font-size: 12px;
}

.weui-Font4 {
  font-size: 10px;
}

.weui-Font5 {
  font-size: 8px;
}

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-轮播]]></title>
    <link href="www.freefook.com/15235125175960.html"/>
    <updated>2018-04-12T13:55:17+08:00</updated>
    <id>www.freefook.com/15235125175960.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">第一步：在.wxml文件里写入如下代码</h4>

<pre><code>
&lt;!-- indicator-dots     Boolean     false   是否显示面板指示点 --&gt;
    &lt;!-- autoplay   Boolean     false   是否自动切换 --&gt;
    &lt;!-- interval   Number  5000    自动切换时间间隔 --&gt;
    &lt;!-- duration   Number  500     滑动动画时长 --&gt;
    &lt;!-- circular   Boolean     false   是否采用衔接滑动 --&gt;
    
&lt;swiper indicator-dots=&quot;{{indicatorDots}}&quot;  
        autoplay=&quot;{{autoplay}}&quot; 
        interval=&quot;{{interval}}&quot; 
        duration=&quot;{{duration}}&quot; 
        circular=&quot;true&quot;&gt;  

      &lt;block wx:for=&quot;{{imgUrls}}&quot; wx:key=&quot;{{item}}&quot; wx:for-index=&quot;index&quot;&gt;  
        &lt;swiper-item&gt;  
            &lt;navigator url=&quot;{{item.link}}&quot; hover-class=&quot;navigator-hover&quot;&gt; 
            &lt;image src=&quot;{{item.url}}&quot; 
                   class=&quot;slide-image&quot;/&gt;  
            &lt;/navigator&gt;  
        &lt;/swiper-item&gt;  
      &lt;/block&gt;  

&lt;/swiper&gt; 

</code></pre>

<h4 id="toc_1">第二步：在.wxss文件里设置如下属性</h4>

<pre><code>   swiper{
    height: 200px;
   } 

    .slide-image{  
        width: 100%;  
        height: 200px;
    }  
</code></pre>

<h4 id="toc_2">第三步：在.js文件里设置如下数据 和轮播属性设置</h4>

<pre><code> imgUrls: [
      {
        url: &#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;
      }, {
        url: &#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;
      }, {
        url: &#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;
      }   

    ],
    indicatorDots: true,
    autoplay: true,
    
    interval: 3000,
    duration: 500,

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[区块链]]></title>
    <link href="www.freefook.com/15439750080174.html"/>
    <updated>2018-12-05T09:56:48+08:00</updated>
    <id>www.freefook.com/15439750080174.html</id>
    <content type="html"><![CDATA[
<ol>
<li>区块链的由来</li>
<li>区块链的特性</li>
<li>区块链的应用场景</li>
<li>区块链的技术点</li>
<li>区块链的未来</li>
</ol>

<h3 id="toc_0">比特币</h3>

<p>区块链的概念首次在2008年末由中本聪（Satoshi Nakamoto）发表在<br/>
比特币论坛中的论文《Bitcoin: A Peer-to-Peer Electronic Cash System》提出。<br/>
论文中区块链技术是构建比特币数据结构与交易信息加密传输的基础技术，<br/>
该技术实现了比特币的挖矿与交易。<br/>
中本聪认为：<br/>
    第一，借助第三方机构来处理信息的模式拥有点与点之间缺乏信任的内生弱点，<br/>
商家为了提防自己的客户，会向客户索取完全不必要的信息，<br/>
但仍然不能避免一定的欺诈行为；<br/>
    第二，中介机构的存在，增加了交易成本，限制了实际可行的最小交易规模；<br/>
    第三，数字签名本身能够解决电子货币身份问题，<br/>
如果还需要第三方支持才能防止双重消费，则系统将失去价值。<br/>
基于以上三点现存的问题，中本聪在区块链技术的基础上，创建了比特币</p>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.23.32.png" alt="屏幕快照 2018-12-05 上午10.23.32"/></p>

<h5 id="toc_1">挖矿</h5>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.44.50.png" alt="屏幕快照 2018-12-05 上午10.44.50"/></p>

<h5 id="toc_2">交易实现、区块链形成的步骤</h5>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.40.02.png" alt="屏幕快照 2018-12-05 上午10.40.02"/></p>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.38.01.png" alt="屏幕快照 2018-12-05 上午10.38.01"/></p>

<h3 id="toc_3">一、区块链的由来</h3>

<p>区块链的发展历史非常短暂，起初于数字货币交易的比特币。<br/>
作为比特币 运行的底层支撑技术一一区块链得到大家一致的追捧</p>

<p>区块链并非仅仅是一项加密技术或者数字货币，<br/>
在信息不对称、不确定的环境下，它还可以建立<br/>
满足经济活动赖以发生、 发展的“信任”生态 体系。</p>

<p>作为比特币底层技术的“链”，其价值远大于比特币本身。<br/>
区块链可以让人们在没有 中央权威机构监督的情况下，对彼此协作建立起信心。</p>

<p>区块链是一种共享账本技术，<br/>
实现了在分布式商业网络里多方参与的双边交易中的去中介化。 <br/>
简单来说，它是一台创造信任的机器。 </p>

<p>2.0 通过智能合约技术将 其用于数字货币以外的分布式应用领域</p>

<h3 id="toc_4">二、区块链的特性</h3>

<p>区块链技术可以防止数据篡改，可以用来安全透明的方式进行溯源，<br/>
从而构建出信任的网络。 </p>

<p>区块链技术作为比特币的基础性技术，具有高度透明、去中心化、去信任、<br/>
集体维护（不可更改）、匿名等性质。<br/>
这些性质体现了分布式自治的理念，逐渐受到拥有创新意识的金融机构的广泛关注。</p>

<p>去中心化、无须信任系统、去中介化、不可篡改、加密安全性。<br/>
这些优点的叠加可以解决两个长期存在于加密数字货币行业的问题：<br/>
“双花”问题和“拜占庭”将军问题。</p>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.37.21.png" alt="屏幕快照 2018-12-05 上午10.37.21"/></p>

<h3 id="toc_5">三、区块链的应用场景</h3>

<h3 id="toc_6">四、区块链的技术点</h3>

<p><strong>区块链技术（Block Chain）</strong>是指通过去中心化的方式<br/>
集体维护一个可靠数据库的技术方案。<br/>
该技术方案主要让区块（Block）通过密码学方法相关联起来，<br/>
每个数据块包含了一定时间内的系统全部数据信息，<br/>
并且生成数字签名以验证信息的有效性<br/>
并链接到下一个数据块形成一条主链（Chain）。</p>

<p><strong>区块（Block）</strong>是区块链中的一条记录，包含并确认待处理的交易。</p>

<p><strong>挖矿（Mining</strong>）指通过计算形成新的区块，<br/>
是交易的支持者利用自身的计算机硬件<br/>
为网络做数学计算进行交易确认和提高安全性的过程。</p>

<p>以比特币为例：交易支持者（矿工）在电脑上运行比特币软件<br/>
不断计算软件提供的复杂的密码学问题来保证交易的进行。<br/>
作为对他们服务的奖励，矿工可以得到他们所确认的交易中包含的手续费，<br/>
以及新创建的比特币。</p>

<p><strong>对等式网络（Peer-to-Peer Network）</strong>是指通过允许单个节点与其他节点直接交互，<br/>
从而实现整个系统像有组织的集体一样运作的系统。</p>

<p>以比特币为例：网络以这样一种方式构建——每个用户都在传播其他用户的交易。<br/>
而且重要的是，不需要银行或其他金融机构作为第三方。</p>

<p><strong>哈希散列(Hash)</strong>是密码学里的经典技术，把任意长度的输入通过哈西算法，<br/>
变换成固定长度的由字母和数字组成的输出。</p>

<p><strong>数字签名（Digital Signature）</strong>是一个让人可以证明所有权的数学机制。</p>

<p><strong>私钥（Private Key）</strong>是一个证明你有权从一个特定的钱包消费电子货币的保密数据块，<br/>
是通过数字签名来实现的 。</p>

<p><strong>“双花”问题</strong>：<br/>
加密数字货币和其他数字资产一样，<br/>
如同可以将一个文件以附件形式保存并发送任意多次，具有无限可复制性的缺陷。</p>

<p>如果没有一个中心化的机构，<br/>
我们无法确认一笔数字现金或资产是否已经被花掉或提取。</p>

<p>为了解决“双花”问题，可以信赖的第三方需要保留交易总帐<br/>
从而保证每笔现金或资产只被花费或提取过一次。</p>

<p>在区块链中，每一个区块都包含了上一个区块的哈希值，<br/>
从创始区块开始连接到当前区块从而形成块链。<br/>
每一个区块都要确保按照时间顺序在上个区块之后产生，<br/>
否则前一个区块的哈希值是未知的。<br/>
同时，由于区块链中所有交易都要进行对外广播，<br/>
所以只有当包含在最新区块中的所有交易都是独一无二且之前从未发生过，<br/>
其他节点才会认可该区块。<br/>
因此在区块链中，“双花”变的非常困难。</p>

<p><strong>“拜占庭将军”问题</strong>：<br/>
拜占庭问题的核心问题是当战场上多个将军互相并不信任彼此（存在叛徒）时，<br/>
互相相隔甚远无法碰头，但却要保证进攻时间一致，<br/>
所以某种分布式远程协调沟通机制尤为重要。</p>

<p>如果每个将军向其他九个将军派出一名信使，也就是10 个将军每个派出了9 名信使，<br/>
即为总计90 次的传输，<br/>
每个将军会分别收到9 条信息，可能每一封都附着不同的进攻时间。</p>

<p>此外，部分将军会答应超过一个的攻击时间，故意背叛发起人，<br/>
所以他们将重新广播超过一条的信息链。</p>

<p>这个系统迅速变成不可靠信息和攻击时间相互矛盾的混合体。<br/>
区块链通过为发送信息加入了成本，也就是基于计算一个随机哈希算法<br/>
得到遗传64 位的随机数字和字母组成的字符串的“工作量证明”，<br/>
并加入了一个随机元素以保证在一个时间只有一个将军可以进行广播，<br/>
解决了这个问题。</p>

<h3 id="toc_7">五、区块链的未来</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-分类悬停菜单]]></title>
    <link href="www.freefook.com/15440814346317.html"/>
    <updated>2018-12-06T15:30:34+08:00</updated>
    <id>www.freefook.com/15440814346317.html</id>
    <content type="html"><![CDATA[
<p>xml 文件</p>

<pre><code> &lt;!-- 分类菜单 --&gt;
  &lt;view id=&quot;affix&quot; wx:if=&#39;{{tabs.length &gt; 1}}&#39; class=&#39;{{typeFixed?&quot;menu-typefixed&quot;:&quot;menu-typeFixed&quot;}}&#39;&gt;
    &lt;view class=&quot;menu-scroll-view-wrap&quot;&gt;
      &lt;scroll-view class=&quot;menu-scroll-view-catalog&quot; scroll-x=&quot;true&quot; scroll-with-animation=&quot;true&quot;&gt;
        &lt;view class=&quot;menu-scroll-view-item&quot; wx:for=&quot;{{tabs}}&quot; wx:key=&quot;{{index}}&quot; data-index=&quot;{{index}}&quot; bindtap=&quot;onTabSelected&quot;&gt;
          &lt;text class=&quot;menu-text-item {{index === tabIndex ? &#39;menu-active-text-item&#39; : &#39;&#39;}} weui-zimFont11&quot; data-index=&quot;{{index}}&quot;&gt;{{item.name}}&lt;/text&gt;
        &lt;/view&gt;
      &lt;/scroll-view&gt;
    &lt;/view&gt;
  &lt;/view&gt;
</code></pre>

<p>wxss文件</p>

<pre><code>/* 顶部悬停分类菜单样式 */

.menu-typeFixed {
  top: 0px;
  left: 0;
  z-index: 300;
  height: 80rpx;
  width: 100%;
  background-color: white;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.menu-typefixed {
  position: fixed;
  top: 0px;
  left: 0;
  z-index: 300;
  height: 88rpx;
  width: 100%;
  background-color: white;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.menu-scroll-view-wrap {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: flex-start;
}

.menu-scroll-view-catalog {
  height: 35px;
  width: 100%;
  white-space: nowrap;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: flex-start;
}

.menu-scroll-view-catalog::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
}

::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
}

.menu-scroll-view-item {
  display: inline-block;
  flex-direction: row;
  align-items: flex-start;
  justify-content: flex-start;
  padding: 5px 10px;
  border-bottom: 2px solid #fff;
}

menu-text-item {
  border-bottom: 1px #fff solid;
}

.menu-active-text-item {
  border-bottom: 2px #dc3545 solid;
}

/* 以上-顶部悬停分类菜单样式 */
</code></pre>

<p>js文件</p>

<pre><code>/**
   * 页面的初始数据
   */
  data: {
    //分类菜单
    menuTop: 666,
    menuBottom: 666,
    typeFixed: false,
    tabIndex: 0, //选择分类的第几个
    tabs: [{
      name: &quot;全部&quot;
    }, {
      name: &quot;新品&quot;
    }, {
      name: &quot;生鲜&quot;
    }, {
      name: &quot;居家&quot;
    }, {
      name: &quot;服装&quot;
    }, {
      name: &quot;美护&quot;
    }, {
      name: &quot;出行&quot;
    }, {
      name: &quot;电器&quot;
    }, {
      name: &quot;杂货&quot;
    }, ],

  },
  /**************获取分类菜单的吸顶距离**************** */
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {
    var that = this;
    setTimeout(function() {
      // 页面加载完成时，并且当请求完商品的时候，判断吸顶菜单距离顶部的距离
      that.testHeight();
    }, 1000)
  },

  testHeight: function() {
    var that = this;
    var query = wx.createSelectorQuery() //创建节点查询器 query
    query.select(&#39;#affix&#39;).boundingClientRect() //这段代码的意思是选择Id= the - id的节点，获取节点位置信息的查询请求
    query.exec(function(res) {
      that.setData({
        menuTop: res[0].top,
        menuBottom: res[0].bottom,
      })
    });
  },

  onPageScroll: function(e) {
    //当滚动位置大于menuTop并且typeFixed为true时,setData不再执行，可有效避免页面的卡顿，以及吸顶时页面的抖动
    if (e.scrollTop &gt;= this.data.menuTop &amp;&amp; !this.data.typeFixed) {
      this.setData({
        typeFixed: true
      })
    } else if (e.scrollTop &lt; this.data.menuTop &amp;&amp; this.data.typeFixed) {
      this.setData({
        typeFixed: false
      })
    }
    //当滚动的距离到了scrollview底部的时候，触发请求方法
    if ((this.data.menuBottom - this.data.winHeight - 55) &lt; e.scrollTop) {
      this.lower();
    }

  },

  /********************切换分类菜单时请求该分类数据******************* */

  onTabSelected: function(event) {
    var that = this;
    // 切换tab时需要需要设置当前是第几个
    that.setData({
      tabIndex: event.target.dataset.index
    });

  },
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-商品网格布局]]></title>
    <link href="www.freefook.com/15236096586360.html"/>
    <updated>2018-04-13T16:54:18+08:00</updated>
    <id>www.freefook.com/15236096586360.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">在wxml里加入如下代码：</h5>

<pre><code>
  &lt;!-- 商品网格布局 --&gt;
  &lt;view class=&#39;goods-grid-view&#39;&gt;
    &lt;block wx:for=&quot;{{12}}&quot; wx:key=&quot;{{item}}&quot; wx:for-item=&quot;item&quot;&gt;
      &lt;view class=&#39;goods-grid-blockview&#39; data-item=&#39;{{item}}&#39; catchtap=&#39;onGoodsTap&#39;&gt;
        &lt;view class=&#39;goods-grid-container&#39;&gt;
          &lt;image class=&#39;goods-img&#39; mode=&#39;aspectFill&#39; src=&quot;{{&#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;}}&quot;&gt;&lt;/image&gt;
          &lt;text class=&#39;goods-title weui-Font2&#39;&gt;{{&quot;我是商品名&quot;}}&lt;/text&gt;
          &lt;text class=&#39;goods-title weui-Font3&#39;&gt;{{&quot;我是商品介绍么&quot;}}&lt;/text&gt;
          &lt;text class=&#39;goods-price weui-Font2&#39; style=&#39;color: #d0ae97&#39;&gt;¥{{200}}\r\t\r\t\r\t&lt;text class=&#39;goods-price weui-Font2&#39; style=&#39;text-decoration:line-through;color: lightgray&#39;&gt;¥{{260}}&lt;/text&gt;&lt;/text&gt;
        &lt;/view&gt;
      &lt;/view&gt;
    &lt;/block&gt;
  &lt;/view&gt;

</code></pre>

<h5 id="toc_1">在wxss里加入如下代码：</h5>

<pre><code>
/* 网格布局 */

.goods-grid-view {
  background-color: white;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: auto;
  margin-left: 10rpx;
  margin-right: 10rpx;
}

.goods-grid-blockview {
  width: 50%;
  background-color: white;
}

.goods-grid-container {
  display: flex;
  flex-direction: column;
  margin-top: 20rpx;
  margin-left: 10rpx;
  margin-right: 10rpx;
}

.goods-img {
  width: 100%;
  height: 340rpx;
  border-radius: 10rpx;
  overflow: hidden;
}

.goods-title {
  margin-top: 15rpx;
  margin-bottom: 10rpx;
  display: -webkit-box;
  align-content: center;
  text-align: left;
  overflow: hidden;
  text-overflow: -o-ellipsis-lastline;
  text-overflow: ellipsis;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  width: 340rpx;
}

.goods-price {
  text-align: left;
}

</code></pre>

<h5 id="toc_2">运行效果</h5>

<p><img src="media/15236096586360/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-06%20%E4%B8%8B%E5%8D%884.02.21.png" alt="屏幕快照 2018-12-06 下午4.02.21"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-登录篇]]></title>
    <link href="www.freefook.com/15234367737951.html"/>
    <updated>2018-04-11T16:52:53+08:00</updated>
    <id>www.freefook.com/15234367737951.html</id>
    <content type="html"><![CDATA[
<p>做小程序登录思考问题：</p>

<ol>
<li>问题一：不想在小程序里总输入自己平台的账号密码，怎么与微信关联；</li>
<li>问题二：关联了微信也要可以切换账号使用；</li>
<li>问题三：不注册账号也可以在小程序里体验使用，必要时提示去登录；</li>
<li>问题四：如果打开小程序是我们项目自己的登录注册页面（体验较</li>
</ol>

<p><img src="media/15234367737951/IMG_3194.png" alt="IMG_3194"/></p>

<hr/>

<h4 id="toc_0">微信登录获取openID</h4>

<pre><code>//不需要微信授权既可获取微信小程序登录API获取code
wx.login({
    success: function (res) {
    //获取code返回值如下：
    //code:&quot;0619IaNe0L8gHz1VMINe0WgjNe09IaNC&quot;
    //errMsg:&quot;login:ok&quot;
    //code每次请求返回都不同，并且code使用一次后作废，
    //即使不使用，下一次请求code，上一次的code也作废。
    }
})
</code></pre>

<ol>
<li>得到code将code传给服务器</li>
<li>服务器GET请求接口<a href="https://api.weixin.qq.com/sns/jscode2session">https://api.weixin.qq.com/sns/jscode2session</a></li>
</ol>

<pre><code>小程序官方更新将原POST请求改为GET请求了，返回值都是session_key，openid

新GET
https://api.weixin.qq.com/sns/jscode2session?appid=APPID&amp;secret=SECRET&amp;js_code=JSCODE&amp;grant_type=authorization_code

原POST
https://api.weixin.qq.com/sns/jscode2session  
参数{
    appid，
    secret，
    js_code = code，
    grant_type = authorization_code
} 
返回数据{
    session_key，
    openid
}
</code></pre>

<p>官方地址：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/code2Session.html">https://developers.weixin.qq.com/miniprogram/dev/api/code2Session.html</a></p>

<h4 id="toc_1">还想获取更多个人信息要如何做？</h4>

<ol>
<li>如果授权获可以取用户信息wx.getUserInfo得到iv,encryptedData,rawData,signature</li>
<li>将得到的iv,encryptedData(加密数据) 和wx.login 得到的code传给服务器</li>
<li>使用和openID一起返回的session_key去解密</li>
<li>服务端解密encryptedData 可以获取userinfo信息和unionId</li>
</ol>

<pre><code>服务端解密数据encryptedData
    对称解密使用的算法为 AES-128-CBC，数据采用PKCS#7填充。
    对称解密的目标密文为 Base64_Decode(encryptedData)。
    对称解密秘钥 aeskey = Base64_Decode(session_key), aeskey 是16字节。
    对称解密算法初始向量 为Base64_Decode(iv)，其中iv由数据接口返回。
    
解密encryptedData数据
{
　　&quot;openId&quot;:&quot;&quot;,
　　&quot;nickName&quot;:&quot;ZIM東&quot;,
　　&quot;gender&quot;:1,
　　&quot;language&quot;:&quot;zh_CN&quot;,
　　&quot;city&quot;:&quot;&quot;,
　　&quot;province&quot;:&quot;&quot;,
　　&quot;country&quot;:&quot;&quot;,
　　&quot;avatarUrl&quot;:&quot;&quot;,
　　&quot;unionId&quot;:&quot;&quot;,
　　&quot;watermark&quot;:{
　　　　&quot;timestamp&quot;:1523433831,
　　　　&quot;appid&quot;:&quot;&quot;
　　}
}

在登录小程序之前，既没有关注过公众号，也没有登录过公众号，
更没有使用微信登录的方式登录过app。
通过 wx.login 的到的 code 解密后未返回 unionid

另外，为了应用能校验数据的有效性，会在敏感数据加上数据水印( watermark )
appid 敏感数据归属appid，开发者可校验此参数与自身appid是否一致
timestamp 敏感数据获取的时间戳, 开发者可以用于数据时效性校验
</code></pre>

<h4 id="toc_2">会话密钥session_key有效性</h4>

<pre><code>开发者如果遇到因为session_key不正确而校验签名失败或解密失败，请关注下面几个与session_key有关的注意事项。

    1.wx.login()调用时，用户的session_key会被更新而致使旧session_key失效。
    开发者应该在明确需要重新登录时才调用wx.login()，
    及时通过登录凭证校验接口更新服务器存储的session_key。

    2.微信不会把session_key的有效期告知开发者。
    我们会根据用户使用小程序的行为对session_key进行续期。
    用户越频繁使用小程序，session_key有效期越长。

    3.开发者在session_key失效时，可以通过重新执行登录流程获取有效的session_key。
    使用接口wx.checkSession()可以校验session_key是否有效，
    从而避免小程序反复执行登录流程。

    4.当开发者在实现自定义登录态时，
    可以考虑以session_key有效期作为自身登录态有效期，
    也可以实现自定义的时效性策略。
    
    5.wx.login() 之后再获取wx.getUserInfo()
</code></pre>

<blockquote>
<pre><code>微信如何授权小程序获取用户信息:

为优化用户体验，使用 wx.getUserInfo 接口直接弹出授权框的开发方式将逐步不再支持。
从2018年4月30日开始，小程序与小游戏的体验版、开发版调用 wx.getUserInfo 接口，
将无法弹出授权询问框，默认调用失败。正式版暂不受影响。
开发者可使用以下方式获取或展示用户信息：

一、小程序:
1、使用 button 组件，并将 open-type 指定为 getUserInfo 类型，获取用户基本信息。

详情参考文档:
https://developers.weixin.qq.com/miniprogram/dev/component/button.html


2、使用 open-data 展示用户基本信息。

详情参考文档:
https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html
</code></pre>
</blockquote>

<h4 id="toc_3">登录流程图</h4>

<p><img src="media/15234367737951/%E6%B5%81%E7%A8%8B.png" alt="流程"/></p>

<p>👆原图地址：<a href="https://blog.csdn.net/dingjianmin/article/details/75137934">https://blog.csdn.net/dingjianmin/article/details/75137934</a></p>

<p><img src="media/15234367737951/%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B.jpg" alt="登录流程"/></p>

<p>注意：开发者后台拿到开放数据后可以对数据进行校验签名和解密，来保证数据不被篡改。 </p>

<p><img src="media/15234367737951/%E6%95%B0%E6%8D%AE.png" alt="数据"/></p>

<pre><code>签名校验以及数据加解密涉及用户的会话密钥session_key。
 开发者应该事先通过 wx.login 登录流程获取会话密钥 session_key 并保存在服务器。
 为了数据不被篡改，开发者不应该把session_key传到小程序客户端等服务器外的环境。

数据签名校验

为了确保 开放接口 返回用户数据的安全性，微信会对明文数据进行签名。
开发者可以根据业务需要对数据包进行签名校验，确保数据的完整性。

    通过调用接口（如 wx.getUserInfo）获取数据时，接口会同时返回 rawData、signature，
    其中 signature = sha1( rawData + session_key )
    
    开发者将 signature、rawData 发送到开发者服务器进行校验。
    服务器利用用户对应的 session_key 使用相同的算法计算出签名 signature2 ，
    比对 signature 与 signature2 即可校验数据的完整性。

</code></pre>

<p>官方数据签名校验<br/>
<a href="https://developers.weixin.qq.com/miniprogram/dev/api/signature.html#wxchecksessionobject">https://developers.weixin.qq.com/miniprogram/dev/api/signature.html#wxchecksessionobject</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下的Vue环境搭建]]></title>
    <link href="www.freefook.com/15421818269588.html"/>
    <updated>2018-11-14T15:50:26+08:00</updated>
    <id>www.freefook.com/15421818269588.html</id>
    <content type="html"><![CDATA[
<p>官网地址：<a href="https://vuejs.org/">https://vuejs.org/</a></p>

<h4 id="toc_0">安装清单：</h4>

<ul>
<li><strong>Homebrew：</strong>  Mac系统下的包管理器</li>
<li><strong>Node.js:</strong>    JavaScript运行环境(runtime)</li>
<li><strong>npm:</strong>        Nodejs下的包管理器</li>
<li><strong>webpack:</strong>    Vue的组件是通过 .vue自定义的组件，需要打包成 .js文件</li>
<li><strong>Vue-cli:</strong>    用来生成模板的Vue工程</li>
</ul>

<h5 id="toc_1">打开Mac下的终端</h5>

<h4 id="toc_2">安装Homebrew</h4>

<pre><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;

安装成功后查看一下版本信息输入: brew -v
</code></pre>

<h4 id="toc_3">安装Node.js</h4>

<pre><code>brew install nodejs

也可以下载后安装,下载地址：https://nodejs.org/en/download/

安装成功后查看一下版本信息输入: node -v
</code></pre>

<h4 id="toc_4">获取Nodejs安装目录访问权限</h4>

<pre><code>sudo chmod -R 777 /usr/local/lib/node_modules/
</code></pre>

<h4 id="toc_5">安装npm (淘宝镜像)</h4>

<pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org

按回车执行，就可以用淘宝团队定制的cnpm代替默认的npm了
cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm

npm安装插件是从官网http://registry.npmjs.org下载对应的插件包
该网站服务器位于国外，所以经常下载缓慢或出现异常
阿里巴巴的淘宝团队,把npm官网的插件都同步到了中国的服务器
</code></pre>

<h4 id="toc_6">安装webpack</h4>

<pre><code>cnpm install webpack -g
</code></pre>

<h4 id="toc_7">全局安装vue脚手架 vue-cli@2</h4>

<pre><code>cnpm install vue-cli -g
</code></pre>

<h4 id="toc_8">分道扬镳之一</h4>

<h4 id="toc_9">创建一个vue的项目代码</h4>

<pre><code>执行命令1. cd  路径(想把项目创建在哪个文件夹下面)

vue-cli@2的初始化方式命令如下：
执行命令2. vue init webpack-simple demo1&lt;工程名字不能用中文,不要用大写&gt;

也可执行命令: vue init webpack demo1
这样会询问我们是否安装一些Vue依赖模块，也可以简单(webpack-simple)创建完项目,
需要的其他模块单独安装
</code></pre>

<p>当出现如下信息时，vue init已执行完毕</p>

<pre><code>To get started:
   cd firstVueProject(你创建的工程文件名)
   npm install
   npm run dev 
</code></pre>

<pre><code>依次执行命令：
执行命令3. cd firstVueProject(你创建的工程文件名)
执行命令4. cnpm install (可一路回车Enter)
</code></pre>

<pre><code>单独安装模块: 可安装(或不安装) 
vue 路由模块vue-router
网络请求模块vue-resource
其他模块可继续加在一起执行命令：
cnpm install vue-router vue-resource --save-dev

启动项目
执行命令5. cnpm run dev

至此结束
</code></pre>

<h4 id="toc_10">打开项目</h4>

<pre><code>cd 项目地址
cnpm install
cnpm run dev

如果npm 报错,尝试
1. cnpm cache clean --force
2. rm -rf node_modules folder
3. cnpm install
4. cnpm run dev
</code></pre>

<h4 id="toc_11">注解</h4>

<pre><code>1. npm 开启了npm run dev以后怎么退出或关闭？
ctrl+c

2. --save-dev
自动把模块和版本号添加到模块配置文件package.json中的依赖里devdependencies部分

3. --save-dev 与 --save 的区别
--save     安装包信息将加入到dependencies（生产阶段的依赖）
--save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它

4. 在项目开发完成之后，可以输入 npm run build 来进行打包工作
</code></pre>

<h4 id="toc_12">分道扬镳之二</h4>

<h4 id="toc_13">创建一个基于mpvue的小程序项目代码</h4>

<pre><code>执行命令1. cd  路径(想把项目创建在哪个文件夹下面)

执行命令2. vue init mpvue/mpvue-quickstart firstVueProject(不要使用中文)
</code></pre>

<p>接下来是项目的一些配置信息，可一路回车Enter<br/>
当出现如下信息，模板代码已经下载结束</p>

<pre><code>Vue-cli . Generated &quot;firstVueProject(你创建的工程文件名)&quot; .
To get started:
   cd firstVueProject(你创建的工程文件名)
   npm install
   npm run dev 
Documentation can be found at http://mpvue.com
</code></pre>

<p>这时代码还缺少依赖库，继续执行</p>

<pre><code>执行命令3. cd firstVueProject(你创建的工程文件名)
执行命令4. cnpm install
</code></pre>

<h6 id="toc_14">cnpm install过程中---可能会出现npm update check failed</h6>

<pre><code>因为文件夹的权限问题导致的，执行如下命令:
sudo chown -R $USER:$(id -gn $USER) /home/{username}/.config
</code></pre>

<h6 id="toc_15">cnpm install过程中---可能会出现类似警告</h6>

<pre><code>npm WARN vue-loader@15.2.4 requires a peer of css-loader@* but none is installed. You must install peer dependencies yourself.
npm WARN vue-loader@15.2.4 requires a peer of vue-template-compiler@^2.0.0 but none is installed. You must install peer dependencies yourself.
</code></pre>

<p>需要安装css-loader 和vue-template-compiler</p>

<pre><code>执行如下命令:
cnpm i css-loader vue-template-compiler
</code></pre>

<p>终于到了最后，让这个代码运行起来，进入开发模式，执行命令：</p>

<pre><code>cnpm run dev
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vue项目结构]]></title>
    <link href="www.freefook.com/15422692424640.html"/>
    <updated>2018-11-15T16:07:22+08:00</updated>
    <id>www.freefook.com/15422692424640.html</id>
    <content type="html"><![CDATA[
<p><img src="media/15422692424640/20171126152702891.png" alt="20171126152702891"/></p>

<p><img src="media/15422692424640/20171126152742787.png" alt="20171126152742787"/></p>

<p><img src="media/15422692424640/20171126152635816.png" alt="20171126152635816"/></p>

<p>原文地址：<a href="https://www.jianshu.com/p/7006a663fb9f">https://www.jianshu.com/p/7006a663fb9f</a></p>

<p><strong>使用的编辑器是VSCode</strong></p>

<p><img src="media/15422692424640/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-11-15%20%E4%B8%8B%E5%8D%884.13.15.png" alt="屏幕快照 2018-11-15 下午4.13.15"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VSCode编译器 格式化.vue文件]]></title>
    <link href="www.freefook.com/15422706001586.html"/>
    <updated>2018-11-15T16:30:00+08:00</updated>
    <id>www.freefook.com/15422706001586.html</id>
    <content type="html"><![CDATA[
<p>vscode需要修改下<strong>首选项</strong>：<br/>
打开vscode，菜单栏选择 文件 -&gt; 首选项 -&gt; 设置<br/>
把下面的拷贝完整覆盖右侧用户设置</p>

<p>{</p>

<pre><code>&quot;window.zoomLevel&quot;: 0,
&quot;extensions.ignoreRecommendations&quot;: true,
&quot;emmet.syntaxProfiles&quot;: {
    &quot;vue-html&quot;: &quot;html&quot;,
    &quot;vue&quot;: &quot;html&quot;
},
&quot;vetur.validation.template&quot;: false,
&quot;eslint.options&quot;: {
    &quot;plugins&quot;: [&quot;html&quot;]
},
&quot;eslint.validate&quot;: [
    &quot;javascript&quot;,
    &quot;javascriptreact&quot;,
    &quot;html&quot;,
    &quot;vue&quot;
],
&quot;prettier.singleQuote&quot;: true,
&quot;prettier.semi&quot;: false,
&quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,
&quot;vetur.format.defaultFormatterOptions&quot;: {
   &quot;wrap_attributes&quot;: &quot;force-aligned&quot;
 }
</code></pre>

<p>} </p>

<p><strong>Alt+Shift+F 就可以格式化 .vue文件了</strong></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VSCode 前端常用插件推荐]]></title>
    <link href="www.freefook.com/15422741986731.html"/>
    <updated>2018-11-15T17:29:58+08:00</updated>
    <id>www.freefook.com/15422741986731.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">通用插件</h4>

<p>HTML Snippets ：超级实用且初级的 H5代码片段以及提示<br/>
HTML CSS Support ：让 html 标签上写class 智能提示当前项目所支持的样式</p>

<p>Path Intellisense ： 自动路径补全</p>

<p>Project Manager ： 在多个项目之前快速切换的工具<br/>
vscode-icon ： 让 vscode 资源树目录加上图标<br/>
beautify ： 格式化代码的工具</p>

<h4 id="toc_1">Vue推荐插件</h4>

<p>vetur ： 语法高亮、智能感知、Emmet等</p>

<p>VueHelper ： snippet代码片段<br/>
Vue 2 Snippets ：vue快捷键提示</p>

<p>Auto Close Tag ： 自动补全html标签<br/>
Auto Rename Tag ：同步更改html尾标签</p>

<p>ESLint ：ESlint语法提示<br/>
JavaScript (ES6) snippets ：ES6语法快捷键支持</p>

<p>Stylus ：主要支持vue文件下stylus CSS语法提示<br/>
language-stylus ：stylus语法提示</p>

<p>File Peek ： 文件路径跳转<br/>
Path Autocomplete ：文件自动路径提示</p>

<p>VS Color Picker ：color: #fff 自动提示<br/>
Import Cost ： 引入包大小计算,对于项目打包后体积掌握很有帮助</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序之解析html]]></title>
    <link href="www.freefook.com/15420001365512.html"/>
    <updated>2018-11-12T13:22:16+08:00</updated>
    <id>www.freefook.com/15420001365512.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">使用wxParse解析html</h5>

<p>github地址：<a href="https://github.com/icindy/wxParse">https://github.com/icindy/wxParse</a><br/>
下载之后，将wxParse文件夹导入自己工程与utils同级别   </p>

<h5 id="toc_1">在app.wxss全局样式文件中，引入wxParse的样式表如:</h5>

<pre><code>@import&quot;/wxParse/wxParse.wxss&quot;;
</code></pre>

<h5 id="toc_2">在所需的JS文件中引入如:</h5>

<pre><code>var WxParse = require(&#39;../../wxParse/wxParse.js&#39;);

/**
     * WxParse.wxParse(bindName , type, data, target,imagePadding)
     * 1.bindName绑定的数据名(必填)
     * 2.type可以为html或者md(必填)
     * 3.data为传入的具体数据(必填)
     * 4.target为Page对象,一般为this(必填)
     * 5.imagePadding为当图片自适应是左右的单一padding(默认为0,可选)
     */
     
    WxParse.wxParse(&#39;content&#39;, &#39;html&#39;, &#39;&lt;h1&gt;我是内容&lt;/h1&gt;&#39;, this, 0);
</code></pre>

<h5 id="toc_3">在wxml所需的文件中引入如:</h5>

<pre><code>&lt;import src=&quot;../../wxParse/wxParse.wxml&quot; /&gt;

&lt;!-- 内容 --&gt;
&lt;template is=&quot;wxParse&quot; data=&quot;{{wxParseData:content.nodes}}&quot; /&gt;
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序之跑马灯效果]]></title>
    <link href="www.freefook.com/15419994873507.html"/>
    <updated>2018-11-12T13:11:27+08:00</updated>
    <id>www.freefook.com/15419994873507.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">实现跑马灯效果图</h5>

<p><img src="media/15419923901812/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-11-12%20%E4%B8%8A%E5%8D%8811.45.16.png" alt="屏幕快照 2018-11-12 上午11.45.16"/></p>

<h5 id="toc_1">---wxml文件---</h5>

<pre><code>&lt;!--跑马灯中的文字信息字段:gundong_text--&gt;
&lt;view wx:if=&#39;{{gundong_text}}&#39; class=&quot;marquee_container&quot; style=&quot;--marqueeWidth--:-12em&quot;&gt;
  &lt;view class=&#39;marquee_text&#39;&gt;
    &lt;view class=&#39;hengxianggundong&#39;&gt;
      &lt;image class=&#39;gundong_image&#39; mode=&#39;aspectFit&#39; src=&#39;../../image/laba.png&#39;&gt;&lt;/image&gt;
      &lt;view class=&#39;triangle-left&#39;&gt;&lt;/view&gt;
      &lt;view class=&quot;gundong_textView weui-zimFont9&quot;&gt;{{gundong_text}}&lt;/view&gt;
    &lt;/view&gt;
  &lt;/view&gt;
&lt;/view&gt;
</code></pre>

<h5 id="toc_2">---wxss文件---</h5>

<pre><code>/* 跑马灯样式 */
@keyframes around {
  from {
    margin-left: 100%;
  }
  to {
    /* var接受传入的变量 */
    margin-left: var(--marqueeWidth--);
  }
}
.marquee_container {
  position: absolute;
  top: 120rpx;
  width: 100%;
  height: 60rpx;
  line-height: 60rpx;
  z-index: 1200;
}
.marquee_container:hover {
  /* 不起作用 */
  animation-play-state: paused;
}
.marquee_text {
  display: inline-block;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  white-space: nowrap;
  animation-name: around;
  animation-duration: 10s; /*过渡时间*/
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
.hengxianggundong {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}
.gundong_image {
  background-color: rgba(0, 0, 0, 0.6);
  width: 50rpx;
  height: 50rpx;
  border-radius: 50%;
  margin-right: 20rpx;
}
.triangle-left {
  width: 0;
  height: 0;
  border-right: 10rpx solid rgba(0, 0, 0, 0.8);
  border-bottom: 10rpx solid rgba(0, 0, 0, 0);
  border-top: 10rpx solid rgba(0, 0, 0, 0);
}
.gundong_textView {
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding-left: 20rpx;
  padding-right: 20rpx;
  border-radius: 10rpx;
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序之动画]]></title>
    <link href="www.freefook.com/15419945000025.html"/>
    <updated>2018-11-12T11:48:20+08:00</updated>
    <id>www.freefook.com/15419945000025.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">---wxml文件---</h5>

<pre><code>&lt;view class=&#39;lunbo&#39; animation=&quot;{{animationItem}}&quot;
&lt;/view&gt;
</code></pre>

<h5 id="toc_1">---JS文件---</h5>

<pre><code>  var that = this;
    //动画样式
    that.animationItem = wx.createAnimation({
      duration: 500,
      timingFunction: &#39;linear&#39;,
      transformOrigin: &#39;90% 70%&#39;,
      success: function(res) {}
    });
    
    // 定时器，2S 循环一次
    that.data.newLunbo_interval = setInterval(function() {
      //开始动画-缩小
      that.animationItem.scale3d(0.98, 0.98, 0.1).step();
      that.setData({
        animationItem: that.animationItem.export()
      });
      //延迟恢复到原来大小
      setTimeout(function() {
        that.animationItem.scale3d(1.0, 1.0, 1.0).step();
        that.setData({
          animationItem: that.animationItem.export(),
        });
      }, 500)
    }.bind(that), 2000);
</code></pre>

<h5 id="toc_2">清理定时器</h5>

<pre><code>    clearInterval(this.data.newLunbo_interval);
</code></pre>

<h5 id="toc_3">创建wx.createAnimation参数含义</h5>

<pre><code>duration            动画持续时间，单位 ms 
timingFunction      &#39;linear&#39; 动画的效果  
delay               动画延迟时间，单位 ms 
transformOrigin     &#39;50% 50% 0&#39;
</code></pre>

<h5 id="toc_4">timingFunction 的合法值</h5>

<pre><code>&#39;linear&#39;    动画从头到尾的速度是相同的
&#39;ease&#39;  动画以低速开始，然后加快，在结束前变慢
&#39;ease-in&#39;   动画以低速开始
&#39;ease-in-out&#39;   动画以低速开始和结束
&#39;ease-out&#39;  动画以低速结束
&#39;step-start&#39;    动画第一帧就跳至结束状态直到结束
&#39;step-end&#39;  动画一直保持开始状态，最后一帧跳到结束状态
</code></pre>

<h5 id="toc_5">transformOrigin 的合法值</h5>

<pre><code>transform-origin: x-axis y-axis z-axis;

x-axis  定义视图被置于 X 轴的何处。可能的值：
    left
    center
    right
    length
    %
    
y-axis  定义视图被置于 Y 轴的何处。可能的值：
    top
    center
    bottom
    length
    %

z-axis  定义视图被置于 Z 轴的何处。可能的值：
    length
</code></pre>

<h4 id="toc_6">微信小程序播放音频</h4>

<pre><code>
    // 音频播放
    const innerAudioContext = wx.createInnerAudioContext()
    innerAudioContext.autoplay = true
    innerAudioContext.src = &#39;https://cdn.caomall.net/15290437711272352156.mp3&#39;
    innerAudioContext.onPlay(() =&gt; {
      console.log(&#39;开始播放&#39;)
    })
    innerAudioContext.onError((res) =&gt; {
      console.log(res.errMsg)
      console.log(res.errCode)
    })
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序之二维码]]></title>
    <link href="www.freefook.com/15426946934140.html"/>
    <updated>2018-11-20T14:18:13+08:00</updated>
    <id>www.freefook.com/15426946934140.html</id>
    <content type="html"><![CDATA[
<pre><code>获取小程序二维码，官方提供了三个接口，开发者可挑选适合自己的接口。 
 A接口，生成小程序码，可接受path参数较长，生成个数受限。
  B接口，生成小程序码，可接受页面参数较短，生成个数不受限。
   C接口，生成二维码，可接受path参数较长，生成个数受限。
</code></pre>

<pre><code>接口A: 适用于需要的码数量较少的业务场景
通过该接口生成的小程序码，永久有效

接口C：适用于需要的码数量较少的业务场景
通过该接口生成的小程序二维码，永久有效，数量限制

数量限制接口A加上接口C，总共生成的码数量限制为100,000

接口B：适用于需要的码数量极多的业务场景

通过接口B生成的小程序码，永久有效，数量暂无限制。
可以带参数最大32个可见字符，只支持数字，大小写英文
以及部分特殊字符：!#$&amp;&#39;()*+,/:;=?@-._~，
其它字符请自行编码为合法字符（
因不支持%，中文无法使用 urlencode 处理，请使用其他编码方式）

B接口调用分钟频率受限(目前5000次/分钟)
</code></pre>

<h4 id="toc_0">首先</h4>

<p>因为接口B不受数量限制，我们使用接口B生成小程序二维码<br/>
 使用PostMan发起GET请求获取access_token：<br/>
 官方文档 ：<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140183">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140183</a></p>

<pre><code>https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=这里填写小程序appid&amp;secret=这里填写小程序secret

返回参数：
{
    &quot;access_token&quot;: &quot;&quot;,
    &quot;expires_in&quot;: 7200
}
</code></pre>

<h4 id="toc_1">其次</h4>

<p>发起POST请求：</p>

<pre><code>https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=这里填写上一个接口返回的token

Body中选择raw写入参数，例如
{
    &quot;page&quot;:&quot;pages/lengxiangui/coldfresh_index/coldfresh_index&quot;,
    &quot;scene&quot;:&quot;1&quot;
}
注：场景值 scene 不得超过32位字符，并且上线已有的页面才能生成二维码
</code></pre>

<p><img src="media/15426946934140/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-11-20%20%E4%B8%8B%E5%8D%882.35.02.png" alt="屏幕快照 2018-11-20 下午2.35.02"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序之分享]]></title>
    <link href="www.freefook.com/15427653318773.html"/>
    <updated>2018-11-21T09:55:31+08:00</updated>
    <id>www.freefook.com/15427653318773.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">分享代码</h4>

<pre><code>  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function(res) {
    let that = this;
    if (res.from === &#39;button&#39;) {
      console.log(res.target)
    }
    return {
      title: &#39;&#39;,
      imageUrl: &#39;&#39;,
      path: &#39;/pages/index/index&#39;,
      success: function(res) {
        console.log(&quot;转发成功&quot;);
        shareAppMessage: ok;
        wx.showShareMenu({
          withShareTicket: true
        });
      },
      fail: function(res) {
        console.log(&quot;转发失败&quot;);
      }
    }
  },
</code></pre>

<h4 id="toc_1">分享注意事项</h4>

<pre><code>1. 分享转发：不自定义转发图片的情况下，
默认会取当前页面，从顶部开始，高度为 80% 屏幕宽度的图像作为转发图片。
测试scrollView iOS从scrollView顶部开始截图，Android是截屏有差异

2. 设置的imageUrls 地址中不能有中文

3. 小程序里绘制页面，和网络请求处理结是异步处理，
所以当点击分享时，请求接口，返回数据之后去转发是行不通的，
要在转发前就准备好要转发的内容；
</code></pre>

<h4 id="toc_2">分享小程序二维码开发流程</h4>

<p><strong>二维码调用的接口，请阅读  ‘微信小程序之九：二维码’</strong></p>

<pre><code>获取小程序码的业务：建议在自己服务器上处理，小程序端不做处理

注意：为什么不在小程序端做处理？
1. access_token的有效期等问题
2. 调用接口B，获取小程序二维码，接口返回的是二进制流
3. 加载二进制小程序码的图片，需要转base64 在image组件中可以显示
4. 小程序canvas画布不支持绘制base64图片，模拟器可以，真机不行
5. 参数字段scene，带参数最大32个可见字符

如何解决带参数最大32个可见字符？
1. 服务端要出这样一个接口：请求生成二维码的接口
2. 服务端接收小程序端传来的生成二维码的参数
3. 服务端将小程序端传来的参数scene存数据库(因为大于32字符)生成对应的id用于生成二维码
4. 小程序端扫码进入程序的时候，可以获取参数id
5. 小程序端用id请求服务端获取当初要编辑在二维码里的真正参数
</code></pre>

<p>微信扫码，扫描带参二维码<br/>
进入小程序指定的页面中需要接收场景值scene</p>

<pre><code>onLoad: function(options) {
 if (options.scene) {
    // options 中的 scene 需要使用 decodeURIComponent 才能获取到生成二维码时传入的 scene
    var scene = decodeURIComponent(options.scene)
    console.log(&#39;打印参数scene---&gt;&#39; + scene)
  }
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序开发规范]]></title>
    <link href="www.freefook.com/15416465825836.html"/>
    <updated>2018-11-08T11:09:42+08:00</updated>
    <id>www.freefook.com/15416465825836.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">微信小程序里的四种文件</h5>

<pre><code>.json 后缀的 JSON 配置文件
.wxml 后缀的 WXML 模板文件
.wxss 后缀的 WXSS 样式文件
.js 后缀的 JS 脚本逻辑文件
</code></pre>

<h5 id="toc_1">资源管理</h5>

<pre><code>### 图片资源
目前图片资源的主要性能问题在于大图片和长列表图片上，
这两种情况都有可能导致 iOS 客户端内存占用上升，
从而触发系统回收小程序页面。
### 图片对内存的影响
在 iOS 上，小程序的页面是由多个 WKWebView 组成的，
在系统内存紧张时，会回收掉一部分 WKWebView。
从过去我们分析的案例来看，大图片和长列表图片的使用会引起 WKWebView 的回收。
### 图片对页面切换的影响
除了内存问题外，大图片也会造成页面切换的卡顿。
我们分析过的案例中，有一部分小程序会在页面中引用大图片，
在页面后退切换中会出现掉帧卡顿的情况。
当前我们建议开发者尽量减少使用大图片资源。
</code></pre>

<h5 id="toc_2">资源文件</h5>

<pre><code>所有资源文件(如图片)放在统一文件下及其子文件中(例如以下分类)
resource
  ——public
  ——tab
  ——home
  ——mine
</code></pre>

<h5 id="toc_3">基础页面</h5>

<pre><code>业务展示的页面放在如 pages 文件及其子文件中(例如以下分类)
pages
  ——index
  ——mall
    ——goodList
    ——goodDetail
  ——order
    ——orderList
    ——orderDetail
  ——mine
    ——myInfo
    ——myAddress
    
如有其他子业务，单独在pages里创建新的子级文件
</code></pre>

<pre><code>注释规范
   针对wxml页面由上到下(或由左到右)分级的模块，均需注释出其功能，
   并在其上下空出一行与其他代码进行区分。
</code></pre>

<h5 id="toc_4">样式文件</h5>

<pre><code>基础样式文件，在最外层中创建(如：weui.wxss)
第一步：写入公共样式：如 
1.标题字体大小，描述字体大小等项目中一二三级字号；
2.程序中所用的公共色值；
3.布局方式flex的横向布局，纵向布局等；
4.公共布局中wxss样式前缀统一(如weui-开头)；
等等

第二步：在app.wxss文件最上部，引入 @import &quot;weui.wxss&quot;;
以上公共样式便可全局使用
</code></pre>

<pre><code>wxss规范
    1.wxss 页面可使用快捷键真理代码(Shift+Alt+F)
    整理后代码有明显的代码缩进，对齐。每一个样式类之间空出一行；

    2.在开发过程中rpx和px均可能用到，
    如通常情况下间距使用rpx，
    字体大小和边框等使用px，开发者根据实际情况而定；
       
    3.同一块的样式属性(如 .order-title 和 .order-image)放在一块；
    
    4.wxss 样式中同一块可以这样抒写(如 .order.title)
    意思是.order样式下的.title,
    其他地方的class=&#39;title&#39;不会引用到.order下的.title
    
    5.wxss样式之间用块状注释。请勿在代码后面直接注释。
</code></pre>

<h5 id="toc_5">JS规范</h5>

<pre><code>JS规范
    1.删除js文件中未用到的生命周期函数，保持代码的整洁
    2.右上角不要分享的页面，删除JS文件中该方法onShareAppMessage:function()
    3.采用ES6 关键字let定义变量，尽量不使用var
    4.所有涉及到数据绑定的变量均需在data中初始化,禁止在不定义的情况下直接setData
    5.变量名以及函数名统一采用驼峰命名法(或下划线分割)
    6.正常情况下函数名前缀需加上清晰的动词表示函数功能(如getOderList)
    7.点击事件函数命名方式为 on + 事件名 或者业务名
    8.JS语句无需以分号结束，统一省略分号
    9.JS中一致使用单引号&#39; &#39; , WXML中一致使用双引号&quot; &quot;
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序的历程]]></title>
    <link href="www.freefook.com/15416695471017.html"/>
    <updated>2018-11-08T17:32:27+08:00</updated>
    <id>www.freefook.com/15416695471017.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">历程</h4>

<ol>
<li><p>16年 越来越多产品通过公众号来做，因为这里开发、获取用户和传播成本更低。拆分出来的服务号并没有提供更好的服务，所以微信内部正在研究新的形态，叫「微信小程序」。</p></li>
<li><p>从2017年1月9日 小程序正式推出之后至 2017年12月28日 跳一跳上线火爆，传播发展的地域时间差；</p></li>
<li><p>全面开放申请后，主体类型为企业、政府、媒体、其他组织或个人的开发者，均可申请注册小程序。小程序、订阅号、服务号、企业号是并行的体系。</p></li>
<li><p>微信小程序是一种全新的连接用户与服务的方式，它可以在微信内被便捷地获取和传播，同时具有出色的使用体验。</p></li>
<li><p>2018.7.13 微信更新小程序，增加了我的小程序入口,最多可加50个；</p></li>
<li><p>小程序入口=&gt; 微信 消息页下拉，发现页 小程序；<br/>
小程序分享不能分享到朋友圈，分享好友或群；<br/>
主要是线下场景扫码使用</p></li>
</ol>

<h4 id="toc_1">小程序的几点介绍</h4>

<pre><code>1.小程序是一种不需要下载安装即可使用的应用，它实现了应用“触手可及”的梦想，用户扫一扫或者搜一下即可打开应用。也体现了“用完即走”的理念；

2.用户不用关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装卸载。

3.对于开发者而言，小程序开发门槛相对较低，难度不及APP，能够满足简单的基础应用；

4.适合生活服务类线下商铺以及非刚需低频应用的转换。

5.小程序能够实现消息通知、线下扫码、公众号关联等七大功能。其中，通过公众号关联，用户可以实现公众号与小程序之间相互跳转。由于小程序不存在入口。
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序账号申请]]></title>
    <link href="www.freefook.com/15232437563217.html"/>
    <updated>2018-04-09T11:15:56+08:00</updated>
    <id>www.freefook.com/15232437563217.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">小程序注意事项</h4>

<ol>
<li>同一个邮箱只能申请1个公众号；</li>
<li>同一个手机号码可注册和认证5个公众号；</li>
<li>同一身份证注册个人类型公众号数量上限为2个；</li>
<li>同一公司、个体工商户、事业单位、其他组织资料注册公众号数量上限为5个；</li>
<li>同一政府、媒体类型可注册和认证50个公众号。</li>
<li>企业、政府、媒体、其他组织主体可以注册50个小程序</li>
<li>个体户和个人类型主体可注册5个小程序。<br/></li>
<li>公众号可关联同主体的10个小程序及不同主体的3个小程序 </li>
<li>已关联的小程序可被使用在自定义菜单和模版消息场景中</li>
<li>小程序和小程序 相互跳转的必须是同一公众号下关联的</li>
<li>小程序发布前，可修改2次名称</li>
<li>发布后，必须通过微信认证流程改名</li>
<li>小程序名称可以由中文、数字、英文。长度在4-30个字符之间，一个中文字等于2个字符</li>
<li>公众号、小程序在微信公众平台上的名称是唯一的，且属于同一主体下，可以重名</li>
<li>不得与不同主体的公众号名称重名。</li>
</ol>

<p>另附一种快速注册微信小程序方法：微信商户平台里，可以添加小程序，<br/>
并且是直接认证通过的，支付认证过的, 省600块！！！</p>

<hr/>

<h4 id="toc_1">小程序账号注册流程介绍</h4>

<ol>
<li>打开公众平台 <a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></li>
<li>使用未绑定微信其他产品的邮箱注册</li>
<li>填写信息后，个人登录成功(免费且不能认证)</li>
<li>企业需要填写企业信息需300块认证费</li>
<li>企业有支付功能开通需300块</li>
<li>查看小程序平台, 截图如下</li>
</ol>

<h5 id="toc_2">个人小程序账号截图</h5>

<p><img src="media/15232437563217/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-09%20%E4%B8%8A%E5%8D%8811.19.02.png" alt="屏幕快照 2018-04-09 上午11.19.02"/></p>

<h5 id="toc_3">个人账号下应用类截图：</h5>

<p><img src="media/15232437563217/1533714194263.jpg" alt="1533714194263"/></p>

<h5 id="toc_4">个人账号下游戏类截图：</h5>

<p><img src="media/15232437563217/1533714051550.jpg" alt="1533714051550"/></p>

<h5 id="toc_5">企业小程序认证3到5个工作日</h5>

<p><img src="media/15232437563217/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-18%20%E4%B8%8A%E5%8D%8810.31.37.png" alt="屏幕快照 2018-04-18 上午10.31.37"/></p>

<h5 id="toc_6">企业小程序基本信息设置</h5>

<p><img src="media/15232437563217/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF.png" alt="基本信息"/></p>

<h5 id="toc_7">企业小程序 侧边栏多了微信支付 支付设置 与小程序插件</h5>

<p><img src="media/15232437563217/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-19%20%E4%B8%8B%E5%8D%881.54.00.png" alt="屏幕快照 2018-04-19 下午1.54.00"/></p>

<h5 id="toc_8">企业微信小程序支付</h5>

<p><img src="media/15232437563217/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-08%20%E4%B8%8B%E5%8D%883.17.14.png" alt="屏幕快照 2018-08-08 下午3.17.14"/></p>

<h5 id="toc_9">小程序更新</h5>

<p><img src="media/15232437563217/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-08%20%E4%B8%8B%E5%8D%883.16.10.png" alt="屏幕快照 2018-08-08 下午3.16.10"/></p>

<hr/>

<h4 id="toc_10">官方微信小程序接入指南链接：</h4>

<ul>
<li><a href="https://developers.weixin.qq.com/miniprogram/introduction/">https://developers.weixin.qq.com/miniprogram/introduction/</a></li>
</ul>

<p><img src="media/15232437563217/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-09%20%E4%B8%8A%E5%8D%8811.31.04.png" alt="屏幕快照 2018-04-09 上午11.31.04"/></p>

<hr/>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信平台与微信小程序]]></title>
    <link href="www.freefook.com/15399429964472.html"/>
    <updated>2018-10-19T17:56:36+08:00</updated>
    <id>www.freefook.com/15399429964472.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">微信平台有哪些？</h5>

<p>微信公众平台：<br/>
<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p>

<p>微信支付的商户平台：<br/>
<a href="https://pay.weixin.qq.com/index.php/core/home/login?return_url=%2F">https://pay.weixin.qq.com/index.php/core/home/login?return_url=%2F</a><br/>
注：小程序里支付只能用小程序支付方式，必须和小程序里开通的支付的商户一致；</p>

<p>支付接口文档<br/>
<a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></p>

<p>微信开放平台<br/>
<a href="https://open.weixin.qq.com/cgi-bin/index?t=home/index&amp;lang=zh_CN">https://open.weixin.qq.com/cgi-bin/index?t=home/index&amp;lang=zh_CN</a></p>

<p>微信开发者平台：<br/>
<a href="http://weixin.qq.com/">http://weixin.qq.com/</a></p>

<p>微信硬件平台：<br/>
<a href="https://iot.weixin.qq.com/">https://iot.weixin.qq.com/</a></p>

<p>腾讯的广告平台：<br/>
<a href="http://e.qq.com/ads/">http://e.qq.com/ads/</a></p>

<p>腾讯开放平台：<br/>
<a href="http://open.tencent.com/">http://open.tencent.com/</a></p>

<h5 id="toc_1">腾讯自家小程序全家桶</h5>

<pre><code>小程序示例   第一个小程序
小程序开发助手
小程序数据助手
小游戏数据助手
公众平台助手
微信发票助手
王卡申请助手

QQ游戏
腾讯爱玩
全民大乐斗
企鹅电竞+
腾讯动漫+

腾讯+  产品体验官
腾讯网
腾讯文档
腾讯企业邮箱

腾讯云助手
腾讯视频云
腾讯AI体验中心
腾讯云AI体验中心
腾讯优图AI开发平台
</code></pre>

<h5 id="toc_2">其他特色小程序</h5>

<pre><code>摩拜单车： 接入是小程序线下落地的一次大的尝试
KFC，麦当劳： 点餐实用型的线下场景
家乐福中国：小程序有优惠
沃尔玛：小程序可自助结账

一时风靡的答题类，头脑王者

青芒杂志
一条视频
毒蛇电影社区

企鹅电竞+
斗鱼直播
虎牙直播
YY直播+
</code></pre>

]]></content>
  </entry>
  
</feed>
