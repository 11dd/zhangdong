<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[至尊宝典之备忘录]]></title>
  <link href="www.freefook.com/atom.xml" rel="self"/>
  <link href="www.freefook.com/"/>
  <updated>2018-12-26T11:40:03+08:00</updated>
  <id>www.freefook.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im">MWeb</generator>

  
  <entry>
    <title type="html"><![CDATA[追着小程序的尾巴,转圈圈]]></title>
    <link href="www.freefook.com/15457085182294.html"/>
    <updated>2018-12-25T11:28:38+08:00</updated>
    <id>www.freefook.com/15457085182294.html</id>
    <content type="html"><![CDATA[
<ul>
<li>微信小程序是什么？</li>
<li>微信小程序干什么？</li>
<li>微信小程序怎么干？ </li>
</ul>

<h2 id="toc_0">一、微信小程序是什么？</h2>

<blockquote>
<p>微信小程序: 简称小程序，英文名Mini Program；<br/>
是一种不需要下载安装即可使用的应用；<br/>
它实现了应用“触手可及”的梦想；<br/>
用户扫一扫或搜一下即可打开应用；</p>
</blockquote>

<h4 id="toc_1">1. 微信上线小程序</h4>

<p>2016年 越来越多产品通过公众号来做，因为这里开发、获取用户和传播成本更低。<br/>
拆分出来的服务号并没有提供更好的服务，所以微信内部正在研究新的形态，<br/>
叫「微信小程序」</p>

<p><strong>2017年1月9日发布</strong>，小程序极其高调地点起了互联网圈空前的热情，<br/>
然而这股热情只维持了很短的时间，<br/>
因为人们发现小程序并非像媒体造势时所称的那样——能取代App。<br/>
基于张小龙设立的初衷——“用完即走”、“尽可能减少对用户的打扰”，<br/>
微信团队严格限制了小程序的线上入口，<br/>
导致其使用者少、热度低，一时间舆论又开始普遍唱衰</p>

<p>2017年12月28日，从当初说短期不碰游戏，到跳一跳上线火爆，<br/>
短时间内大家都开始讨论，使用，研发小程序；</p>

<h4 id="toc_2">2. 修炼内功</h4>

<p>拓展基本功能 -------------保守的平台转型成全能王<br/>
从极度克制到无所不能 ---增添/改进几十项功能<br/>
对开发者友好--------------开放了个人开发者的申请资格<br/>
关联微信生态--------------微信生态中的大哥——公众号，来帮助小程序导流<br/>
开放线上入口 -------------“打扰用户”和“没有用户”之间的抉择</p>

<hr/>

<p><strong>小程序入口:</strong><br/>
1. 微信消息页下拉，任务栏-最近使用入口<br/>
2. 发现页小程序，历史列表入口<br/>
3. 2018.7.13增新功能，添加到我的小程序入口,最多可加50个<br/>
4. 小程序分享入口，不能分享到朋友圈，分享给好友或群<br/>
5. 长按识别二维码进入小程序入口<br/>
6. 公众号菜单可跳转小程序入口<br/>
7. 搜索入口<br/>
8. 扫一扫，扫码入口</p>

<h4 id="toc_3">3. 搜索引擎</h4>

<p>从刚发布时的只能精确搜索，到支持模糊搜索，到支持关键词搜索，<br/>
再到搜索结果开始出现广告，<br/>
搜索框已经开始在小程序生态中扮演越来越重要的角色<br/>
“搜一搜+微信小程序”的组合</p>

<h2 id="toc_4">二、微信小程序干什么？</h2>

<h4 id="toc_5">1.小程序的定位</h4>

<p>小程序希望用“即用即走”的方式激活线下的弱连接场景</p>

<p>为什么是线下？<br/>
线上推广成本奇高<br/>
场景化推广比线上投放广告更容易获得用户<br/>
占有更多用户时间<br/>
建立最短服务路径</p>

<p><strong>体验</strong></p>

<p>微信小程序是一种全新的连接用户与服务的方式，<br/>
它可以在<strong>微信内被便捷</strong>地获取和传播，同时具有出色的使用体验。<br/>
适合生活服务类线下商铺以及非刚需低频应用的转换</p>

<p>从技术角度：体验是优于 HTML5<br/>
从功能角度：替代一些低频的app和体验不佳的服务号<br/>
从入口角度：现阶段二维码链接一切，优势，识别精准，造价低</p>

<h4 id="toc_6">2. 战略方向</h4>

<ul>
<li>助力线下行业<br/>
利用微信公开课平台，在全国各地开展了多次“传统行业+小程序专场”<br/>
公开课的内容基本遵循“小程序能力应用指南+行业优秀案例”的组合展示，<br/>
为各个行业的从业者们提供了方案性指导</li>
<li>发力线上行业<br/>
线下行业毫无关联的小程序开始发展起来<br/>
腾讯自家小程序--音乐站</li>
</ul>

<h4 id="toc_7">3. 挑战电商平台和支付宝</h4>

<p>电商App的模式并不适合直接照搬到小程序，<br/>
也无法发挥小程序“即用即走”的优势</p>

<p>现有的模式就是用户通过分享，或者指定商品的二维码在推广文章中，<br/>
即可跳转至指定小程序落地页，完成购买流程，简化路径；</p>

<p>拼多多代表队的：拼购，团购；</p>

<h2 id="toc_8">三、微信小程序怎么干？</h2>

<p><strong>主要介绍</strong></p>

<blockquote>
<p>1.小程序申请账号，开始干？<br/>
2.小程序开放功能，能干啥？<br/>
3.小程序开发前端人员必备，敲代码？<br/>
4.小程序开发后端服务器配置，有要求？<br/>
5.小程序关于测试，添权限？</p>
</blockquote>

<p>经过将近两年的发展，已经构造了新的小程序开发环境和开发者生态；<br/>
 现在小程序应用数量超过了一百万，覆盖200多个细分的行业；<br/>
 日活用户达到两个亿，小程序还在许多城市实现了支持地铁、公交服务；</p>

<h4 id="toc_9">1. 申请账号</h4>

<p><strong>官方微信小程序接入指南：</strong><br/>
<a href="https://developers.weixin.qq.com/miniprogram/introduction/">https://developers.weixin.qq.com/miniprogram/introduction/</a></p>

<blockquote>
<p>全面开放申请后，主体类型为企业、政府、媒体、其他组织或个人的开发者<br/>
均可申请注册小程序。订阅号、服务号、企业号、小程序、是并行的体系。</p>
</blockquote>

<ol>
<li>打开公众平台 <a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></li>
<li>使用未绑定微信其他产品的邮箱注册</li>
</ol>

<p><strong>注意事项</strong></p>

<ol>
<li>同一个邮箱只能申请1个公众号</li>
<li>同一个手机号码可注册和认证5个公众号</li>
<li>同一身份证注册<strong>个人类型</strong>公众号数量上限为2个</li>
<li>同一公司、个体工商户、事业单位、其他组织资料注册公众号数量上限为5个</li>
<li>同一政府、媒体类型可注册和认证50个公众号</li>
<li>----------------------------------------------------</li>
<li>个体户和<strong>个人类型</strong>主体可注册5个小程序 </li>
<li>企业、政府、媒体、其他组织主体可以注册50个小程序</li>
<li>公众号可关联同主体的10个小程序及不同主体的3个小程序 </li>
<li>公众号已关联的小程序可被使用在自定义菜单和模版消息场景中</li>
<li>小程序和小程序 相互跳转的必须是同一公众号下关联的</li>
<li>----------------------------------------------------</li>
<li>小程序发布前，可修改2次名称。发布后，必须通过微信认证流程改名</li>
<li>小程序名称可以由中文、数字、英文。</li>
<li>小程序名称长度在4-30个字符之间，一个中文字等于2个字符</li>
<li>小程序、公众号、在微信公众平台上的名称是唯一的</li>
<li>小程序可以与同一主体下公众号重名</li>
<li>小程序不得与不同主体的公众号名称重名</li>
</ol>

<p><strong>其他</strong><br/>
企业注册认证费￥300，开通支付功能￥300<br/>
另附一种快速注册微信小程序方法：微信商户平台里，可以添加一个小程序，<br/>
并且是直接认证通过的，开通了支付功能, 省600块！！！<br/>
<strong>企业小程序认证3到5个工作日</strong></p>

<h4 id="toc_10">2. 开放功能</h4>

<p><strong>（1）小程序开放接口</strong></p>

<p>可以获取用户手机号，不能获取本机IP</p>

<pre><code>wx.login    登录
wx.getUserInfo  获取用户信息
wx.chooseAddress    获取用户收货地址
wx.requestPayment   发起微信支付
wx.addCard  添加卡券
wx.openCard 打开卡券
</code></pre>

<p>设备 API 列表：</p>

<pre><code>wx.scanCode 扫码
wx.makePhoneCall    拨打电话
wx.getSystemInfo    获取系统信息
wx.getSystemInfoSync    获取系统信息
wx.getNetworkType   获取网络类型
wx.onNetworkStatusChange    监听网络状态变化

wx.onAccelerometerChange    监听加速度数据
wx.startAccelerometer   开始监听加速度数据
wx.stopAccelerometer    停止监听加速度数据
wx.onCompassChange  监听罗盘数据
wx.startCompass 开始监听罗盘数据
wx.stopCompass  停止监听罗盘数据
wx.setClipboardData 设置剪贴板内容
wx.getClipboardData 获取剪贴板内容
</code></pre>

<p>界面 API 列表：</p>

<pre><code>wx.navigateTo   新窗口打开页面
wx.redirectTo   原窗口打开页面
wx.switchTab    切换到 tabbar 页面
wx.navigateBack 退回上一个页面

wx.showToast    显示提示框
wx.hideToast    隐藏提示框

wx.showLoading  显示加载提示框
wx.hideLoading  隐藏提示框

wx.showModal    显示模态弹窗
wx.showActionSheet  显示菜单列表

wx.setNavigationBarTitle    设置当前页面标题
wx.showNavigationBarLoading 显示导航条加载动画
wx.hideNavigationBarLoading 隐藏导航条加载动画
wx.setBackgroundColor   动态设置窗口的背景色
wx.setBackgroundTextStyle   动态设置下拉背景字体、loading 图的样式

wx.createAnimation  动画
wx.createContext    创建绘图上下文
wx.drawCanvas   绘图
wx.stopPullDownRefresh  停止下拉刷新动画
</code></pre>

<p>媒体 API 列表：</p>

<pre><code>wx.chooseImage  从相册选择图片，或者拍照
wx.previewImage 预览图片
wx.startRecord  开始录音
wx.stopRecord   结束录音
wx.playVoice    播放语音
wx.pauseVoice   暂停播放语音
wx.stopVoice    结束播放语音
wx.getBackgroundAudioPlayerState 获取音乐播放状态
wx.playBackgroundAudio  播放音乐
wx.pauseBackgroundAudio 暂停播放音乐
wx.seekBackgroundAudio  控制音乐播放进度
wx.stopBackgroundAudio  停止播放音乐
wx.onBackgroundAudioPlay    监听音乐开始播放
wx.onBackgroundAudioPause   监听音乐暂停
wx.onBackgroundAudioStop    监听音乐结束
wx.chooseVideo  从相册选择视频，或者拍摄
wx.loadFontFace 动态加载字体
</code></pre>

<p>文件 API 列表：</p>

<pre><code>wx.saveFile 保存文件
wx.getSavedFileList 获取已保存的文件列表
wx.getSavedFileInfo 获取已保存的文件信息
wx.removeSavedFile  删除已保存的文件信息
wx.openDocument 打开文件
</code></pre>

<p>数据 API 列表：</p>

<pre><code>wx.getStorage   获取本地数据缓存
wx.getStorageSync   获取本地数据缓存
wx.setStorage   设置本地数据缓存
wx.setStorageSync   设置本地数据缓存
wx.getStorageInfo   获取本地缓存的相关信息
wx.getStorageInfoSync   获取本地缓存的相关信息
wx.removeStorage    删除本地缓存内容
wx.removeStorageSync    删除本地缓存内容
wx.clearStorage 清理本地数据缓存
wx.clearStorageSync 清理本地数据缓存
</code></pre>

<p>位置 API 列表：</p>

<pre><code>wx.getLocation  获取当前位置
wx.chooseLocation   打开地图选择位置
wx.openLocation 打开内置地图
wx.createMapContext 地图组件控制
</code></pre>

<p>网络请求API</p>

<pre><code>wx.request  发起网络请求
wx.uploadFile   上传文件
wx.downloadFile 下载文件
</code></pre>

<hr/>

<p><strong>（2）主要内容：</strong></p>

<ol>
<li>小程序的登录？</li>
<li>小程序授权获取用户信息？</li>
<li>小程序支付? 同一主体的微信支付</li>
<li>小程序转发，带参转发？</li>
<li>生成小程序二维码？</li>
<li>小程序通知? 服务通知</li>
<li>小程序中支持? 扫一扫</li>
<li>小程序收货地址？</li>
<li>小程序意见反馈？</li>
<li>小程序数据统计与分析？</li>
<li>小程序错误日志？</li>
</ol>

<p>？降低用户门槛</p>

<hr/>

<p>登录的设计<br/>
<a href="https://www.freefook.com/15234367737951.html">https://www.freefook.com/15234367737951.html</a><br/>
二维码的使用<br/>
<a href="https://www.freefook.com/15426946934140.html">https://www.freefook.com/15426946934140.html</a><br/>
分享的规则<br/>
<a href="https://www.freefook.com/15427653318773.html">https://www.freefook.com/15427653318773.html</a><br/>
服务通知的限制<br/>
<a href="https://www.freefook.com/15336330410298.html">https://www.freefook.com/15336330410298.html</a> <br/>
数据分析的全面<br/>
<a href="https://www.freefook.com/15363043648238.html">https://www.freefook.com/15363043648238.html</a><br/>
<strong>官方数据分析文档</strong><br/>
<a href="https://developers.weixin.qq.com/miniprogram/analysis/">https://developers.weixin.qq.com/miniprogram/analysis/</a><br/>
<strong>官方支付文档</strong><br/>
<a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">https://pay.weixin.qq.com/wiki/doc/api/index.html</a><br/>
<strong>官方客服消息文档</strong><br/>
<a href="https://developers.weixin.qq.com/miniprogram/introduction/custom.html">https://developers.weixin.qq.com/miniprogram/introduction/custom.html</a></p>

<hr/>

<h4 id="toc_11">3. 小程序开发前端人员必备</h4>

<p>微信开发者工具<br/>
<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a></p>

<p>小程序开发必读项，教程 ，框架 ，组件 ，API<br/>
<a href="https://developers.weixin.qq.com/miniprogram/dev/">https://developers.weixin.qq.com/miniprogram/dev/</a></p>

<p>微信开放社区<br/>
<a href="https://developers.weixin.qq.com/">https://developers.weixin.qq.com/</a></p>

<p>小程序社区<br/>
<a href="http://www.wxapp-union.com/">http://www.wxapp-union.com/</a></p>

<p>weui Github 地址：<br/>
<a href="https://github.com/Tencent/weui-wxss">https://github.com/Tencent/weui-wxss</a></p>

<p>WePY框架开发小程序请移步👇<br/>
<a href="https://tencent.github.io/wepy/index.html">https://tencent.github.io/wepy/index.html</a></p>

<p>美团团队出的mpvue框架请移步👇<br/>
<a href="http://mpvue.com/mpvue/#_2">http://mpvue.com/mpvue/#_2</a></p>

<p>渐进式JavaScript 框架VUE 地址：<br/>
<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p>

<p><strong>资源管理</strong></p>

<pre><code>### 图片资源
目前图片资源的主要性能问题在于大图片和长列表图片上，
这两种情况都有可能导致 iOS 客户端内存占用上升，
从而触发系统回收小程序页面。
### 图片对内存的影响
在 iOS 上，小程序的页面是由多个 WKWebView 组成的，
在系统内存紧张时，会回收掉一部分 WKWebView。
从过去我们分析的案例来看，大图片和长列表图片的使用会引起 WKWebView 的回收。
### 图片对页面切换的影响
除了内存问题外，大图片也会造成页面切换的卡顿。
我们分析过的案例中，有一部分小程序会在页面中引用大图片，
在页面后退切换中会出现掉帧卡顿的情况。
当前我们建议开发者尽量减少使用大图片资源。
</code></pre>

<p><strong>小程序运行机制</strong></p>

<pre><code>热启动
 小程序启动会有两种情况，一种是「冷启动」，一种是「热启动」。
 假如用户已经打开过某小程序，然后在一定时间内再次打开该小程序，
 此时无需重新启动，只需将后台态的小程序切换到前台，
冷启动
 冷启动指的是用户首次打开或小程序被微信主动销毁后再次打开的情况，
 此时小程序需要重新加载启动。

 当小程序进入后台，客户端会维持一段时间的运行状态，超过一定时间后
 （目前是5分钟）会被微信主动销毁
 当短时间内（5s）连续收到两次以上收到系统内存告警，会进行小程序的销毁
</code></pre>

<p><strong>小程序更新</strong></p>

<pre><code>小程序冷启动时如果发现有新版本，将会异步下载新版本的代码包，
并同时用客户端本地的包进行启动，
即新版本的小程序需要等下一次冷启动才会应用上。 
如果需要马上应用最新版本，
可以使用 wx.getUpdateManager API 进行处理。
</code></pre>

<p><strong>关于请求</strong></p>

<pre><code>     •  默认超时时间和最大超时时间都是 60s，可以单独配置超时时间
     •  request、uploadFile、downloadFile 的最大并发限制是 10 个
     •  网络请求的 referer header 不可设置。
     •  小程序进入后台运行后（非置顶聊天），如果 5s 内网络请求没有结束，
         会回调错误信息 fail interrupted；
         在回到前台之前，网络请求接口调用都会无法调用。
     •  只要成功接收到服务器返回，无论statusCode是多少，都会进入success回调。 
</code></pre>

<hr/>

<h4 id="toc_12">4. 小程序开发后端服务器配置</h4>

<p>服务器域名配置：小程序后台-开发设置-服务器域名 中进行配置<br/>
配置时需要注意：</p>

<pre><code> •  域名只支持 https (request、uploadFile、downloadFile) 和 wss (connectSocket) 协议；
 •  域名不能使用 IP 地址或 localhost
 •  域名必须经过 ICP 备案；
 •  出于安全考虑，api.weixin.qq.com 不能被配置为服务器域名，
       相关API也不能在小程序内调用。
       开发者应将 appsecret 保存到后台服务器中，
       通过服务器使用 appsecret 获取 accesstoken，并调用相关 API。
 •  对于每个接口，分别可以配置最多 20 个域名
 •  每月可修改5次接口配置
</code></pre>

<pre><code>业务域名配置：
只能配置自己的域名
想配置个www.baidu.com/ www.taobao.com NO NO NO
</code></pre>

<p><strong>HTTPS 证书</strong></p>

<pre><code>小程序必须使用 HTTPS 请求
小程序内会对服务器域名使用的 HTTPS 证书进行校验
如果校验失败，则请求不能成功发起
由于系统限制，不同平台对于证书要求的严格程度不同
为了保证小程序的兼容性，建议开发者按照最高标准进行证书配置
并使用相关工具检查现有证书是否符合要求
</code></pre>

<p><strong>对证书要求如下：</strong></p>

<pre><code> •  HTTPS 证书必须有效
 •  证书必须被系统信任，部署SSL证书的网站域名必须与证书颁发的域名一致
 •  证书必须在有效期内
 •  iOS 不支持自签名证书
 •  iOS 下证书必须满足苹果 App Transport Security (ATS) 的要求
 •  TLS 必须支持 1.2 及以上版本
 •  部分旧 Android 机型还未支持 TLS 1.2，请确保 HTTPS 服务器的 TLS 版本支持1.2及以下版本;
 •  部分 CA 可能不被操作系统信任，请开发者在选择证书时注意小程序和各系统的相关通告
 •  Chrome 56/57 内核对 WoSign、StartCom 证书限制周知
</code></pre>

<h4 id="toc_13">5. 关于测试</h4>

<ol>
<li><p>小程序公众平台，可以添加体验者权限，才可以打开测试时的小程序</p></li>
<li><p>测试时跳过域名校验</p></li>
</ol>

<pre><code>在微信开发者工具中，可以临时开启 开发环境不校验请求域名、
不校验TLS版本及不校验HTTPS证书选项，跳过服务器域名的校验。

在真机微信小程序中开启调试模式时，不会进行服务器域名的校验。
</code></pre>

<h2 id="toc_14">温馨提示篇——合法且遵守平台规则运营</h2>

<p><strong>(1)初期明确是否允许运营，是否有资质运营</strong></p>

<p>微信小程序平台运营规范<br/>
<a href="https://mp.weixin.qq.com/debug/wxadoc/product/index.html">https://mp.weixin.qq.com/debug/wxadoc/product/index.html</a></p>

<p>小程序开放的服务类目<br/>
<a href="https://mp.weixin.qq.com/debug/wxadoc/product/material.html?t=201714">https://mp.weixin.qq.com/debug/wxadoc/product/material.html?t=201714</a></p>

<pre><code>小程序开放的服务类目，会随着相关政策、法律法规
以及平台要求的变化而产生变化，
请小程序开发者以提交时所要求的材料为准，本文档仅供参考，
划重点，知识点，要考的，**特殊行业所需资质材料**

比如：视频直播类需要提供如下材料

《信息网络传播视听节目许可证》
 视听证很难办，现在不批，一证难求曾经炒到三千万
 
或《广播电视节目制作经营许可证》或

或《网络文化经营许可证）（适用于秀场类非直播视频，
经营范围须含有音乐娱乐产品或演出剧（节）目、
网络表演或动漫产品或展览、比赛活动）

或《广播电视节目播出机构许可证》（适用于电视台）
</code></pre>

<p><strong>(2)违反乱纪后果严重</strong><br/>
2018年2月，微信官方发布公告称：<br/>
已对涉及假货高仿、色情低俗和违规“现金贷”等超过2000个小程序，<br/>
进行永久封禁处理<br/>
然而，要真正清除小程序中暗藏的毒瘤，仍待平台方同监管部门、<br/>
用户受众等形成更为有效的合力。</p>

<p><strong>(3)封禁的危害</strong>：禁封的不是一个小程序，而是你这个小程序的主体；<br/>
                缺陷：微信小程序对于审核和规范还有很长的路要走；</p>

<h3 id="toc_15">总结</h3>

<p>当了解了小程序是什么？能干什么？准备什么？规则是什么？<br/>
开始做小程序项目时，<br/>
请参考以下文章，跟着我不迷路 的小程序设计指南：</p>

<p><a href="https://developers.weixin.qq.com/miniprogram/design/index.html">https://developers.weixin.qq.com/miniprogram/design/index.html</a></p>

<p>一个好的项目，源自大草原的纯天然设计，无添加更放心</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序开发规范]]></title>
    <link href="www.freefook.com/15416465825836.html"/>
    <updated>2018-11-08T11:09:42+08:00</updated>
    <id>www.freefook.com/15416465825836.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">微信小程序里的四种文件</h5>

<pre><code>.json 后缀的 JSON 配置文件
.wxml 后缀的 WXML 模板文件
.wxss 后缀的 WXSS 样式文件
.js 后缀的 JS 脚本逻辑文件
</code></pre>

<h5 id="toc_1">资源管理</h5>

<pre><code>### 图片资源
目前图片资源的主要性能问题在于大图片和长列表图片上，
这两种情况都有可能导致 iOS 客户端内存占用上升，
从而触发系统回收小程序页面。
### 图片对内存的影响
在 iOS 上，小程序的页面是由多个 WKWebView 组成的，
在系统内存紧张时，会回收掉一部分 WKWebView。
从过去我们分析的案例来看，大图片和长列表图片的使用会引起 WKWebView 的回收。
### 图片对页面切换的影响
除了内存问题外，大图片也会造成页面切换的卡顿。
我们分析过的案例中，有一部分小程序会在页面中引用大图片，
在页面后退切换中会出现掉帧卡顿的情况。
当前我们建议开发者尽量减少使用大图片资源。
</code></pre>

<h5 id="toc_2">资源文件</h5>

<pre><code>所有资源文件(如图片)放在统一文件下及其子文件中(例如以下分类)
resource
  ——public
  ——tab
  ——home
  ——mine
</code></pre>

<h5 id="toc_3">基础页面</h5>

<pre><code>业务展示的页面放在如 pages 文件及其子文件中(例如以下分类)
pages
  ——index
  ——mall
    ——goodList
    ——goodDetail
  ——order
    ——orderList
    ——orderDetail
  ——mine
    ——myInfo
    ——myAddress
    
如有其他子业务，单独在pages里创建新的子级文件
</code></pre>

<pre><code>注释规范
   针对wxml页面由上到下(或由左到右)分级的模块，均需注释出其功能，
   并在其上下空出一行与其他代码进行区分。
</code></pre>

<h5 id="toc_4">样式文件</h5>

<pre><code>基础样式文件，在最外层中创建(如：weui.wxss)
第一步：写入公共样式：如 
1.标题字体大小，描述字体大小等项目中一二三级字号；
2.程序中所用的公共色值；
3.布局方式flex的横向布局，纵向布局等；
4.公共布局中wxss样式前缀统一(如weui-开头)；
等等

第二步：在app.wxss文件最上部，引入 @import &quot;weui.wxss&quot;;
以上公共样式便可全局使用
</code></pre>

<pre><code>wxss规范
    1.wxss 页面可使用快捷键真理代码(Shift+Alt+F)
    整理后代码有明显的代码缩进，对齐。每一个样式类之间空出一行；

    2.在开发过程中rpx和px均可能用到，
    如通常情况下间距使用rpx，
    字体大小和边框等使用px，开发者根据实际情况而定；
       
    3.同一块的样式属性(如 .order-title 和 .order-image)放在一块；
    
    4.wxss 样式中同一块可以这样抒写(如 .order.title)
    意思是.order样式下的.title,
    其他地方的class=&#39;title&#39;不会引用到.order下的.title
    
    5.wxss样式之间用块状注释。请勿在代码后面直接注释。
</code></pre>

<h5 id="toc_5">JS规范</h5>

<pre><code>JS规范
    1.删除js文件中未用到的生命周期函数，保持代码的整洁
    2.右上角不要分享的页面，删除JS文件中该方法onShareAppMessage:function()
    3.采用ES6 关键字let定义变量，尽量不使用var
    4.所有涉及到数据绑定的变量均需在data中初始化,禁止在不定义的情况下直接setData
    5.变量名以及函数名统一采用驼峰命名法(或下划线分割)
    6.正常情况下函数名前缀需加上清晰的动词表示函数功能(如getOderList)
    7.点击事件函数命名方式为 on + 事件名 或者业务名
    8.JS语句无需以分号结束，统一省略分号
    9.JS中一致使用单引号&#39; &#39; , WXML中一致使用双引号&quot; &quot;
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-登录篇]]></title>
    <link href="www.freefook.com/15234367737951.html"/>
    <updated>2018-04-11T16:52:53+08:00</updated>
    <id>www.freefook.com/15234367737951.html</id>
    <content type="html"><![CDATA[
<p>做小程序登录思考问题：</p>

<ol>
<li>问题一：不想在小程序里总输入自己平台的账号密码，怎么与微信关联；</li>
<li>问题二：关联了微信也要可以切换账号使用；</li>
<li>问题三：不注册账号也可以在小程序里体验使用，必要时提示去登录；</li>
<li>问题四：如果打开小程序是我们项目自己的登录注册页面（体验较</li>
</ol>

<p><img src="media/15234367737951/IMG_3194.png" alt="IMG_3194"/></p>

<hr/>

<h4 id="toc_0">微信登录获取openID</h4>

<pre><code>//不需要微信授权既可获取微信小程序登录API获取code
wx.login({
    success: function (res) {
    //获取code返回值如下：
    //code:&quot;0619IaNe0L8gHz1VMINe0WgjNe09IaNC&quot;
    //errMsg:&quot;login:ok&quot;
    //code每次请求返回都不同，并且code使用一次后作废，
    //即使不使用，下一次请求code，上一次的code也作废。
    }
})
</code></pre>

<ol>
<li>得到code将code传给服务器</li>
<li>服务器GET请求接口<a href="https://api.weixin.qq.com/sns/jscode2session">https://api.weixin.qq.com/sns/jscode2session</a></li>
</ol>

<pre><code>小程序官方更新将原POST请求改为GET请求了，返回值都是session_key，openid

新GET
https://api.weixin.qq.com/sns/jscode2session?appid=APPID&amp;secret=SECRET&amp;js_code=JSCODE&amp;grant_type=authorization_code

原POST
https://api.weixin.qq.com/sns/jscode2session  
参数{
    appid，
    secret，
    js_code = code，
    grant_type = authorization_code
} 
返回数据{
    session_key，
    openid
}
</code></pre>

<p>官方地址：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/code2Session.html">https://developers.weixin.qq.com/miniprogram/dev/api/code2Session.html</a></p>

<h4 id="toc_1">还想获取更多个人信息要如何做？</h4>

<ol>
<li>如果授权获可以取用户信息wx.getUserInfo得到iv,encryptedData,rawData,signature</li>
<li>将得到的iv,encryptedData(加密数据) 和wx.login 得到的code传给服务器</li>
<li>使用和openID一起返回的session_key去解密</li>
<li>服务端解密encryptedData 可以获取userinfo信息和unionId</li>
</ol>

<pre><code>服务端解密数据encryptedData
    对称解密使用的算法为 AES-128-CBC，数据采用PKCS#7填充。
    对称解密的目标密文为 Base64_Decode(encryptedData)。
    对称解密秘钥 aeskey = Base64_Decode(session_key), aeskey 是16字节。
    对称解密算法初始向量 为Base64_Decode(iv)，其中iv由数据接口返回。
    
解密encryptedData数据
{
　　&quot;openId&quot;:&quot;&quot;,
　　&quot;nickName&quot;:&quot;ZIM東&quot;,
　　&quot;gender&quot;:1,
　　&quot;language&quot;:&quot;zh_CN&quot;,
　　&quot;city&quot;:&quot;&quot;,
　　&quot;province&quot;:&quot;&quot;,
　　&quot;country&quot;:&quot;&quot;,
　　&quot;avatarUrl&quot;:&quot;&quot;,
　　&quot;unionId&quot;:&quot;&quot;,
　　&quot;watermark&quot;:{
　　　　&quot;timestamp&quot;:1523433831,
　　　　&quot;appid&quot;:&quot;&quot;
　　}
}

在登录小程序之前，既没有关注过公众号，也没有登录过公众号，
更没有使用微信登录的方式登录过app。
通过 wx.login 的到的 code 解密后未返回 unionid

另外，为了应用能校验数据的有效性，会在敏感数据加上数据水印( watermark )
appid 敏感数据归属appid，开发者可校验此参数与自身appid是否一致
timestamp 敏感数据获取的时间戳, 开发者可以用于数据时效性校验
</code></pre>

<h4 id="toc_2">会话密钥session_key有效性</h4>

<pre><code>开发者如果遇到因为session_key不正确而校验签名失败或解密失败，请关注下面几个与session_key有关的注意事项。

    1.wx.login()调用时，用户的session_key会被更新而致使旧session_key失效。
    开发者应该在明确需要重新登录时才调用wx.login()，
    及时通过登录凭证校验接口更新服务器存储的session_key。

    2.微信不会把session_key的有效期告知开发者。
    我们会根据用户使用小程序的行为对session_key进行续期。
    用户越频繁使用小程序，session_key有效期越长。

    3.开发者在session_key失效时，可以通过重新执行登录流程获取有效的session_key。
    使用接口wx.checkSession()可以校验session_key是否有效，
    从而避免小程序反复执行登录流程。

    4.当开发者在实现自定义登录态时，
    可以考虑以session_key有效期作为自身登录态有效期，
    也可以实现自定义的时效性策略。
    
    5.wx.login() 之后再获取wx.getUserInfo()
</code></pre>

<blockquote>
<pre><code>微信如何授权小程序获取用户信息:

为优化用户体验，使用 wx.getUserInfo 接口直接弹出授权框的开发方式将逐步不再支持。
从2018年4月30日开始，小程序与小游戏的体验版、开发版调用 wx.getUserInfo 接口，
将无法弹出授权询问框，默认调用失败。正式版暂不受影响。
开发者可使用以下方式获取或展示用户信息：

一、小程序:
1、使用 button 组件，并将 open-type 指定为 getUserInfo 类型，获取用户基本信息。

详情参考文档:
https://developers.weixin.qq.com/miniprogram/dev/component/button.html


2、使用 open-data 展示用户基本信息。

详情参考文档:
https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html
</code></pre>
</blockquote>

<h4 id="toc_3">登录流程图</h4>

<p><img src="media/15234367737951/%E6%B5%81%E7%A8%8B.png" alt="流程"/></p>

<p>👆原图地址：<a href="https://blog.csdn.net/dingjianmin/article/details/75137934">https://blog.csdn.net/dingjianmin/article/details/75137934</a></p>

<p><img src="media/15234367737951/%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B.jpg" alt="登录流程"/></p>

<p>注意：开发者后台拿到开放数据后可以对数据进行校验签名和解密，来保证数据不被篡改。 </p>

<p><img src="media/15234367737951/%E6%95%B0%E6%8D%AE.png" alt="数据"/></p>

<pre><code>签名校验以及数据加解密涉及用户的会话密钥session_key。
 开发者应该事先通过 wx.login 登录流程获取会话密钥 session_key 并保存在服务器。
 为了数据不被篡改，开发者不应该把session_key传到小程序客户端等服务器外的环境。

数据签名校验

为了确保 开放接口 返回用户数据的安全性，微信会对明文数据进行签名。
开发者可以根据业务需要对数据包进行签名校验，确保数据的完整性。

    通过调用接口（如 wx.getUserInfo）获取数据时，接口会同时返回 rawData、signature，
    其中 signature = sha1( rawData + session_key )
    
    开发者将 signature、rawData 发送到开发者服务器进行校验。
    服务器利用用户对应的 session_key 使用相同的算法计算出签名 signature2 ，
    比对 signature 与 signature2 即可校验数据的完整性。

</code></pre>

<p>官方数据签名校验<br/>
<a href="https://developers.weixin.qq.com/miniprogram/dev/api/signature.html#wxchecksessionobject">https://developers.weixin.qq.com/miniprogram/dev/api/signature.html#wxchecksessionobject</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-布局样式wxss]]></title>
    <link href="www.freefook.com/15242100404510.html"/>
    <updated>2018-04-20T15:40:40+08:00</updated>
    <id>www.freefook.com/15242100404510.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">设置背景图片，不要使用这个方式设置背景图</h5>

<pre><code>&lt;view class=&quot;viewClass&quot; style=&quot;background-image: url(&#39;../../images/welcome.png&#39;)&quot;&gt;
&lt;/view&gt;

可以使用 view布局方式中的：
position: relative;
position: absolute;
</code></pre>

<h4 id="toc_1">设置宽度</h4>

<pre><code>CSS 计算宽度 calc(100% - 60px)
</code></pre>

<h5 id="toc_2">overflow 属性</h5>

<pre><code>overflow 属性规定当内容溢出元素框时发生的事情。

visible     默认值。内容不会被修剪，会呈现在元素框之外。
hidden      内容会被修剪，并且其余内容是不可见的。
scroll      内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。
auto        如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。
inherit     规定应该从父元素继承 overflow 属性的值。
</code></pre>

<h5 id="toc_3">button去掉自带的边框</h5>

<pre><code>button::after {
  border: none;
}
</code></pre>

<h5 id="toc_4">组件设置边框</h5>

<pre><code>  border: 1px solid #FFF;
</code></pre>

<h5 id="toc_5">列表中最后一个item样式</h5>

<pre><code>.foods-item:last-child {
  margin-bottom: 10px;
}
</code></pre>

<h3 id="toc_6">微信小程序建项-view的布局</h3>

<pre><code>小程序 View 支持两种布局方式：Block 和 Flex
所有 View 默认都是 block
要使用 flex 布局的话需要显式的声明：

display:flex;
</code></pre>

<h5 id="toc_7">接下来便可以在view 的wxss里尝试如下属性：</h5>

<pre><code>例如：
//使用 flex 布局
display: flex;

.hengxiangClass {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
}

.shuxiangClass {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
</code></pre>

<p>横向布局or竖向布局=&gt;设置属性 flex-direction</p>

<pre><code>flex-direction: row;
{
row：从左到右的水平方向为主轴
row-reverse：从右到左的水平方向为主轴
column：从上到下的垂直方向为主轴
column-reverse：从下到上的垂直方向为主轴
}
</code></pre>

<p>设置元素在横向上的布局方向，需要设置 justify-content 属性</p>

<pre><code>justify-content: space-around;
{
flex-start：主轴起点对齐(默认值)  
flex-end：主轴结束点对齐  
center：在主轴中居中对齐  
space-between：两端对齐，除了两端的子元素分别靠向两端的容器之外，其他子元素之间的间隔都相等  
space-around：每个子元素之间的距离相等，两端的子元素距离容器的距离也和其它子元素之间的距离相同  
}
</code></pre>

<p>设置元素在纵向上的布局方向，需要设置 align-items 属性</p>

<pre><code>align-items: center;
{
stretch 填充整个容器(默认值)
flex-start 侧轴的起点对齐
flex-end 侧轴的终点对齐
center 在侧轴中居中对齐
baseline 以子元素的第一行文字对齐
}
</code></pre>

<p>用于控制子 View 是否换行=&gt;设置flex-wrap 属性</p>

<pre><code>flex-wrap: wrap;
{
nowrap：不换行（默认）
wrap：换行
wrap-reverse：换行，第一行在最下面
}
</code></pre>

<p>转载：<a href="https://blog.csdn.net/weixin_36065510/article/details/73203720">https://blog.csdn.net/weixin_36065510/article/details/73203720</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[电子证照]]></title>
    <link href="www.freefook.com/15444188311660.html"/>
    <updated>2018-12-10T13:13:51+08:00</updated>
    <id>www.freefook.com/15444188311660.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">一、国家新发布的电子证照六项规范：</h4>

<p>电子证照是指由各单位依法出具的、<br/>
具有法律效力的各类证照、证明、批文、鉴定报告、办事结果等文件，<br/>
比如有身份证、结婚证、银行还款流水证明、营业执照等。</p>

<p>2018年11月16日，国家正式发布6项国家标准<br/>
《电子证照 总体技术架构》<br/>
《电子证照 目录信息规范》<br/>
《电子证照 元数据规范》<br/>
《电子证照 标识规范》<br/>
《电子证照 文件技术要求》<br/>
《电子证照 共享服务接口规范》</p>

<p>电子证照应用的总体技术框架、统一的证照分类规则和证照基础信息，<br/>
有助于推动实现全国“一网通办”，让政务信息资源共享和服务更顺畅，<br/>
让百姓切实感受办事更便捷。<br/>
该系列标准将于2019年1月1日起实施。 </p>

<h4 id="toc_1">二、电子证照实施问题？ </h4>

<p>首先明确一点电子证照要赋予与纸质证照具有同等法律效力(出台相关法律法规)</p>

<p>做这套系统基本的点</p>

<ol>
<li>电子证照的信息</li>
<li>电子证照的生成(防伪造、防篡改)</li>
<li>电子证照的颁发</li>
<li>电子证照的查询</li>
<li>电子证照的修改</li>
<li>电子证照的作废(过期失效)</li>
<li>电子证照的共享</li>
<li>电子证照的验证(元数据核对,真伪验证,管理状态核对)</li>
<li>电子证照的管理</li>
<li>电子证照的安全</li>
<li>电子证照持续服务能力(对外提供证照共享服务)</li>
<li>电子证照要跨部门，跨行业，跨区域的统筹</li>
<li>电子证照管理平台，统一管理和统一存储汇聚</li>
<li>电子证照跨层级管理机制，实现各类证照的全局管理和分类管理</li>
<li>电子证照形成区域内共享和同步机制，支撑各级政府服务并联审批和业务协同</li>
</ol>

<p>卫士通方案图（新标准起草单位之一成都卫士通信息产业股份有限公司）</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8A%E5%8D%8811.27.41.png.png" alt="屏幕快照 2018-12-10 上午11.27.41.png"/></p>

<blockquote>
<p>签发管理系统：使用各种方式对存量证照和新增证照数据进行采集，<br/>
基于证照元数据项及数字签名，制作数字格式电子证照，随后选取证照模板，<br/>
嵌套版式格式，利用<strong>电子印章</strong>服务，<br/>
制作生成<strong>OFD</strong>版式证照电子文件，满足证照签发需求；</p>

<p>共享存储系统：电子文件可通过共享存储系统存入电子证照库，<br/>
进行数据汇聚，满足数据管理要求；<br/>
通过共享存储系统与上级电子证照库及平级政务服务数据库实现对接和数据同步，<br/>
满足跨地区、跨层级的证照汇聚和同步需求，</p>

<p>业务系统：可通过验证服务系统提交证照验证、查询、下载等各类请求，<br/>
满足证照使用需求</p>
</blockquote>

<h4 id="toc_2">三、六项规范要点分析</h4>

<h4 id="toc_3">总体技术架构</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104355_5sru8kqwkk.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104355_5sru8kqwkk.pdf</a></p>

<p>其中针对政务服务中的共享服务部署模式，<br/>
用于政务服务的电子证照系统一般分为：<br/>
国家级、省部级、地市级三级</p>

<p>地市级：电子证照共享服务，基于本地区证照库和下级服务的目录信息提供<br/>
所辖地域的电子证照检索，获取和验证等功能，<br/>
并将本级证照资源库的目录信息注册到省部级证照服务中。</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.06.35.png" alt="屏幕快照 2018-12-10 下午2.06.35"/></p>

<h4 id="toc_4">目录信息规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104416_r9inl86xws.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104416_r9inl86xws.pdf</a></p>

<p>其中<br/>
1. 证照定义机构<br/>
依据法律法规或服务事项定义证照或提供业务指导的机构<br/>
2. 证照颁发机构<br/>
依据法律法规或服务事项颁发证照的机构<br/>
3. 证照颁发机构级别<br/>
定义：可颁发该类型证件照的机构的最低行政级别<br/>
值域：国家级，省级，地市级，区县级，乡镇级，其他-缺省值为其他<br/>
4. 证照类型代码编码规则<br/>
采用“机构代码+机构内唯一码”编码方式</p>

<p>证照目录共享流程<br/>
<img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%883.04.32.png" alt="屏幕快照 2018-12-10 下午3.04.32"/></p>

<h4 id="toc_5">元数据规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104434_gl0ni7ejd8.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104434_gl0ni7ejd8.pdf</a></p>

<p>其中元数据信息模型</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.18.00.png" alt="屏幕快照 2018-12-10 下午2.18.00"/></p>

<p>基础信息：<br/>
证照名称，<br/>
证照类型代码，<br/>
证照编号，<br/>
证照唯一标识，<br/>
证照颁发机构(例如：大连市高新园区住房与建设委员会)，<br/>
证照颁发机构代码，<br/>
证照颁发日期，<br/>
持证主体，<br/>
持证主体代码，<br/>
持证主体代码类型，<br/>
持证主体代码类型代码，<br/>
证照有效期起始日期，<br/>
证照有效期截止日期，<br/>
业务信息，<br/>
加注件信息，<br/>
加注件制作时间，<br/>
加注件制作者(例如：大连市行政服务中心)，<br/>
加注件制作事由(安全生产许可证申请),<br/>
加注件有效期截止时间，<br/>
元数据扩展规则(参考元数据规范),</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.28.42.png" alt="屏幕快照 2018-12-10 下午2.28.42"/></p>

<h4 id="toc_6">标识规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104515_0ue9lxpgma.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104515_0ue9lxpgma.pdf</a></p>

<p>其中证照标识结构：<br/>
从左至右依次为：证照根代码-类型代码-颁发机构代码-流水号-版本号-校验位</p>

<p><img src="media/15444188311660/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-10%20%E4%B8%8B%E5%8D%882.34.13.png" alt="屏幕快照 2018-12-10 下午2.34.13"/></p>

<p>电子证照根代码取值固定为“1.2.156.3005.2”<br/>
校验位有统一的校验公式，请参考标识规范详情</p>

<h4 id="toc_7">文件技术要求</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104451_iq4x5vr0l6.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104451_iq4x5vr0l6.pdf</a></p>

<p>一、其中介绍了照面样式要求</p>

<p>二、其中电子证照需满足如下要求：<br/>
1. 使用OFD文件格式<br/>
2. 一个文件内只包含一个证照<br/>
3. 不使用动态元素，如动画音视频等等其他要求参考文档详情内容</p>

<p>三、其中介绍了对安全通用要求，原件和加注件的要求</p>

<h4 id="toc_8">共享服务接口规范</h4>

<p>文档地址：<a href="http://www.echinagov.com/uploads/1/file/public/201811/20181121104543_sf62k790i1.pdf">http://www.echinagov.com/uploads/1/file/public/201811/20181121104543_sf62k790i1.pdf</a></p>

<p>一、其中介绍应用场景和要求</p>

<p>例如：证照检索、<br/>
信息获取、<br/>
证照文件下载、<br/>
信息验证、<br/>
文件验证、<br/>
调用方认证、<br/>
权限控制、<br/>
等接口规范做了相关示例的入参，出参。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-逻辑操作JS]]></title>
    <link href="www.freefook.com/15419922791377.html"/>
    <updated>2018-11-12T11:11:19+08:00</updated>
    <id>www.freefook.com/15419922791377.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">给tabBar设置角标</h5>

<pre><code>wx.setTabBarBadge 这个API在非tabbar页面上调用会失效

wx.setTabBarBadge({
    index: 1,//设置第几个tabBar
    text: &#39;&#39; + 5,//设置角标显示的数字
})

移除角标
wx.removeTabBarBadge({
   index: 1
})    
</code></pre>

<h5 id="toc_1">动态设置页面标题</h5>

<pre><code>第一种：定死页面标题修改 .json文件
{
  &quot;navigationBarTitleText&quot;: &quot;标题&quot;
}

第二种：动态自定义页面标题
wx.setNavigationBarTitle({
  title: this.data.URLBackTitle
})
</code></pre>

<h5 id="toc_2">获取系统信息 下面是屏幕宽高</h5>

<pre><code> wx.getSystemInfo({
      success: function(res) {
        that.setData({
          windowHeight: res.windowHeight,
          windowWidth: res.windowWidth,
        })
      }
});
</code></pre>

<h5 id="toc_3">.map 方法示例 接口返回的imageURL拼接根地址</h5>

<pre><code>var tempArray = &#39;接口返回的数组&#39;
that.setData({
    listArray: tempArray.map(function(item) {
        item.imageURL = getApp().data.baseURL + item.imageURL;
        //如果列表里没有子数组数据需要拼接根地址，就不用再次 .map 方法 直接return item
        item.child.map(function(childItem) {
          childItem.pic = getApp().data.baseURL + childItem.pic;
          return childItem;
        })
        return item;
    }),
})
</code></pre>

<h5 id="toc_4">.filter方法 遍历数组数据</h5>

<pre><code>示例:遍历cityArray 数组，找出cityArray数组中pid 等于
province 数组中province[e.detail.value].id的值
使用.filter方法 比 for 循环速度快

let newArray = that.data.cityArray.filter(item =&gt; item.pid === that.data.province[e.detail.value].id)
</code></pre>

<h5 id="toc_5">本地数据存储</h5>

<pre><code> // 同步方式存储数据
wx.setStorageSync(&#39;userInfo&#39;, this.data.userInfo);

//取出数据
var token = wx.getStorageSync(&#39;userInfo&#39;)

</code></pre>

<h5 id="toc_6">页面栈层级数</h5>

<pre><code>var pages = getCurrentPages();
console.log(&#39;页面栈层数&#39; + pages.length)
if (pages.length == 10) {
//小程序最大10层
}else{
}
</code></pre>

<h5 id="toc_7">获取明天日期</h5>

<pre><code>//获取当前时间
var nowDate = new Date(new Date().toLocaleDateString()); 
//获取明天这个时间
var nowDate1 = new Date(nowDate.getTime() + 24 * 60 * 60 * 1000)

    var date_value1 = nowDate1.getFullYear().toString()
    var date_value2 = (nowDate1.getMonth() + 1).toString()
    var date_value3 = nowDate1.getDate().toString()

    if (date_value2.length == 1) {
      date_value2 = &#39;0&#39; + date_value2
    }
    if (date_value3.length == 1) {
      date_value3 = &#39;0&#39; + date_value3
    }
    
    var tomorrow = date_value1 + &#39;-&#39; + date_value2 + &#39;-&#39; + date_value3
</code></pre>

<h5 id="toc_8">倒计时</h5>

<pre><code>LastTimer: function() {

var that = this;
var totalSecond = 0;
//start_time服务端返回的团购开始时间
var start_time = new Date(that.data.start_time.replace(/-/g, &quot;/&quot;));
totalSecond = Date.parse(start_time) / 1000 - Date.parse(new Date()) / 1000;

    //清理掉倒计时
    clearInterval(that.data.interval_daojishi);
    //开始倒计时
    that.data.interval_daojishi = setInterval(function() {
      // 秒数
      var second = totalSecond;
      // 天数位
      var day = Math.floor(second / 3600 / 24);
      var dayStr = day.toString();
      if (dayStr.length == 1) dayStr = &#39;0&#39; + dayStr;
      // 小时位
      var hr = Math.floor((second - day * 3600 * 24) / 3600);
      var hrStr = hr.toString();
      if (hrStr.length == 1) hrStr = &#39;0&#39; + hrStr;
      // 分钟位
      var min = Math.floor((second - day * 3600 * 24 - hr * 3600) / 60);
      var minStr = min.toString();
      if (minStr.length == 1) minStr = &#39;0&#39; + minStr;
      // 秒位
      var sec = second - day * 3600 * 24 - hr * 3600 - min * 60;
      var secStr = sec.toString();
      if (secStr.length == 1) secStr = &#39;0&#39; + secStr;

      that.setData({
        countDownDay: dayStr,
        countDownHour: hrStr,
        countDownMinute: minStr,
        countDownSecond: secStr,
      });
      totalSecond--;

      if (totalSecond &lt; 0) {
        //倒计时结束，清理掉倒计时
        clearInterval(that.data.interval_daojishi);
        that.setData({
          countDownDay: &#39;00&#39;,
          countDownHour: &#39;00&#39;,
          countDownMinute: &#39;00&#39;,
          countDownSecond: &#39;00&#39;,
        });
      }
    }.bind(this), 1000);
  },
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-网络请求]]></title>
    <link href="www.freefook.com/15235164843984.html"/>
    <updated>2018-04-12T15:01:24+08:00</updated>
    <id>www.freefook.com/15235164843984.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">在.js 文件添加网络请求</h4>

<pre><code> requestData: function () {
    var that = this;
    wx.request({
      url: &#39;http://.../serve/api/v1.0/service/communityLst&#39;,
      data: {},
      method: &#39;GET&#39;, 
      // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT 
      // header: {}, // 设置请求的 header 默认是application/json  
      success: function (res) {  
        //划重点---&gt;setData 
        that.setData({ 
          listData: res.data.query
        })
        // 操作json数据 遍历打印数组里name字段数据  
        for (var i in res.data.query) {
          console.log(res.data.query[i].name);
        }
      },
      fail: function () {
        // fail  
      },
      complete: function () {
        // complete  
      }
    })
  },  
</code></pre>

<h3 id="toc_1">微信小程序点击方法传参与跳页传参</h3>

<h5 id="toc_2">点击事件</h5>

<pre><code>bindtap  事件绑定不会阻止冒泡事件向上冒泡
catchtap  事件绑定可以阻止冒泡事件向上冒泡

点击事件的参数传递：
target：触发事件的源组件
currentTarget：事件绑定的当前事件
</code></pre>

<h5 id="toc_3">跳页</h5>

<pre><code>wx.navigateTo({
url: &#39;../Temp/Temp?province=&#39; + this.data.name + &#39;&amp;selectedindex=&#39; + index + &#39;&amp;arrayIndex=&#39; + JSON.stringify(this.data.arrayIndex),
})
</code></pre>

<h4 id="toc_4">小程序跳转方式</h4>

<pre><code>打开新页面     调用 API wx.navigateTo

页面重定向     调用 API wx.redirectTo

页面返回        调用 API wx.navigateBack

Tab 切换      调用 API wx.switchTab

重启动         调用 API wx.reLaunch
</code></pre>

<p>Tips:</p>

<pre><code>1.navigateTo, redirectTo 只能打开非 tabBar 页面。
2.switchTab 只能打开 tabBar 页面。
3.reLaunch 可以打开任意页面。
4.页面底部的 tabBar 由页面决定，即只要是定义为 tabBar 的页面，底部都有 tabBar。
5.tabBar只能配置最少2个、最多5个 tab
6.调用页面路由带的参数可以在目标页面的onLoad中获取
</code></pre>

<h3 id="toc_5">微信小程序提示信息</h3>

<h5 id="toc_6">加载的loading</h5>

<pre><code>  wx.showLoading({
      title: &#39;正在加载&#39;,
      mask: true,
    })
   wx.hideLoading();
</code></pre>

<h5 id="toc_7">Toast提示</h5>

<pre><code> mask   Boolean     否   是否显示透明蒙层，防止触摸穿透，默认：false
 icon   String  否   图标，有效值 &quot;success&quot;, &quot;loading&quot;, &quot;none&quot;
 
 wx.showToast({
        title: &#39;请输入提示语&#39;,
        icon: &#39;none&#39;,
        mask:true,
        duration: 2000
      }) 
</code></pre>

<h5 id="toc_8">延迟执行</h5>

<pre><code> setTimeout(function() {
   wx.hideLoading()
 }, 1000)
          
</code></pre>

<h5 id="toc_9">弹出窗口提示</h5>

<pre><code>wx.showModal({
    title: &#39;我是弹窗标题&#39;,
    content: &#39;佛系弹窗详情内容&#39;,
    success: function(res) {
      if (res.confirm) {
        console.log(&#39;用户点击确定&#39;)
      } else if (res.cancel) {
        console.log(&#39;用户点击取消&#39;)
      }
    }
  })   
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[区块链]]></title>
    <link href="www.freefook.com/15439750080174.html"/>
    <updated>2018-12-05T09:56:48+08:00</updated>
    <id>www.freefook.com/15439750080174.html</id>
    <content type="html"><![CDATA[
<ol>
<li>区块链的由来</li>
<li>区块链的特性</li>
<li>区块链的应用场景</li>
<li>区块链的技术点</li>
<li>区块链的未来</li>
</ol>

<h3 id="toc_0">比特币</h3>

<p>区块链的概念首次在2008年末由中本聪（Satoshi Nakamoto）发表在<br/>
比特币论坛中的论文《Bitcoin: A Peer-to-Peer Electronic Cash System》提出。<br/>
论文中区块链技术是构建比特币数据结构与交易信息加密传输的基础技术，<br/>
该技术实现了比特币的挖矿与交易。<br/>
中本聪认为：<br/>
    第一，借助第三方机构来处理信息的模式拥有点与点之间缺乏信任的内生弱点，<br/>
商家为了提防自己的客户，会向客户索取完全不必要的信息，<br/>
但仍然不能避免一定的欺诈行为；<br/>
    第二，中介机构的存在，增加了交易成本，限制了实际可行的最小交易规模；<br/>
    第三，数字签名本身能够解决电子货币身份问题，<br/>
如果还需要第三方支持才能防止双重消费，则系统将失去价值。<br/>
基于以上三点现存的问题，中本聪在区块链技术的基础上，创建了比特币</p>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.23.32.png" alt="屏幕快照 2018-12-05 上午10.23.32"/></p>

<h5 id="toc_1">挖矿</h5>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.44.50.png" alt="屏幕快照 2018-12-05 上午10.44.50"/></p>

<h5 id="toc_2">交易实现、区块链形成的步骤</h5>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.40.02.png" alt="屏幕快照 2018-12-05 上午10.40.02"/></p>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.38.01.png" alt="屏幕快照 2018-12-05 上午10.38.01"/></p>

<h3 id="toc_3">一、区块链的由来</h3>

<p>区块链的发展历史非常短暂，起初于数字货币交易的比特币。<br/>
作为比特币 运行的底层支撑技术一一区块链得到大家一致的追捧</p>

<p>区块链并非仅仅是一项加密技术或者数字货币，<br/>
在信息不对称、不确定的环境下，它还可以建立<br/>
满足经济活动赖以发生、 发展的“信任”生态 体系。</p>

<p>作为比特币底层技术的“链”，其价值远大于比特币本身。<br/>
区块链可以让人们在没有 中央权威机构监督的情况下，对彼此协作建立起信心。</p>

<p>区块链是一种共享账本技术，<br/>
实现了在分布式商业网络里多方参与的双边交易中的去中介化。 <br/>
简单来说，它是一台创造信任的机器。 </p>

<p>2.0 通过智能合约技术将 其用于数字货币以外的分布式应用领域</p>

<h3 id="toc_4">二、区块链的特性</h3>

<p>区块链技术可以防止数据篡改，可以用来安全透明的方式进行溯源，<br/>
从而构建出信任的网络。 </p>

<p>区块链技术作为比特币的基础性技术，具有高度透明、去中心化、去信任、<br/>
集体维护（不可更改）、匿名等性质。<br/>
这些性质体现了分布式自治的理念，逐渐受到拥有创新意识的金融机构的广泛关注。</p>

<p>去中心化、无须信任系统、去中介化、不可篡改、加密安全性。<br/>
这些优点的叠加可以解决两个长期存在于加密数字货币行业的问题：<br/>
“双花”问题和“拜占庭”将军问题。</p>

<p><img src="media/15439750080174/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-05%20%E4%B8%8A%E5%8D%8810.37.21.png" alt="屏幕快照 2018-12-05 上午10.37.21"/></p>

<h3 id="toc_5">三、区块链的应用场景</h3>

<h3 id="toc_6">四、区块链的技术点</h3>

<p><strong>区块链技术（Block Chain）</strong>是指通过去中心化的方式<br/>
集体维护一个可靠数据库的技术方案。<br/>
该技术方案主要让区块（Block）通过密码学方法相关联起来，<br/>
每个数据块包含了一定时间内的系统全部数据信息，<br/>
并且生成数字签名以验证信息的有效性<br/>
并链接到下一个数据块形成一条主链（Chain）。</p>

<p><strong>区块（Block）</strong>是区块链中的一条记录，包含并确认待处理的交易。</p>

<p><strong>挖矿（Mining</strong>）指通过计算形成新的区块，<br/>
是交易的支持者利用自身的计算机硬件<br/>
为网络做数学计算进行交易确认和提高安全性的过程。</p>

<p>以比特币为例：交易支持者（矿工）在电脑上运行比特币软件<br/>
不断计算软件提供的复杂的密码学问题来保证交易的进行。<br/>
作为对他们服务的奖励，矿工可以得到他们所确认的交易中包含的手续费，<br/>
以及新创建的比特币。</p>

<p><strong>对等式网络（Peer-to-Peer Network）</strong>是指通过允许单个节点与其他节点直接交互，<br/>
从而实现整个系统像有组织的集体一样运作的系统。</p>

<p>以比特币为例：网络以这样一种方式构建——每个用户都在传播其他用户的交易。<br/>
而且重要的是，不需要银行或其他金融机构作为第三方。</p>

<p><strong>哈希散列(Hash)</strong>是密码学里的经典技术，把任意长度的输入通过哈西算法，<br/>
变换成固定长度的由字母和数字组成的输出。</p>

<p><strong>数字签名（Digital Signature）</strong>是一个让人可以证明所有权的数学机制。</p>

<p><strong>私钥（Private Key）</strong>是一个证明你有权从一个特定的钱包消费电子货币的保密数据块，<br/>
是通过数字签名来实现的 。</p>

<p><strong>“双花”问题</strong>：<br/>
加密数字货币和其他数字资产一样，<br/>
如同可以将一个文件以附件形式保存并发送任意多次，具有无限可复制性的缺陷。</p>

<p>如果没有一个中心化的机构，<br/>
我们无法确认一笔数字现金或资产是否已经被花掉或提取。</p>

<p>为了解决“双花”问题，可以信赖的第三方需要保留交易总帐<br/>
从而保证每笔现金或资产只被花费或提取过一次。</p>

<p>在区块链中，每一个区块都包含了上一个区块的哈希值，<br/>
从创始区块开始连接到当前区块从而形成块链。<br/>
每一个区块都要确保按照时间顺序在上个区块之后产生，<br/>
否则前一个区块的哈希值是未知的。<br/>
同时，由于区块链中所有交易都要进行对外广播，<br/>
所以只有当包含在最新区块中的所有交易都是独一无二且之前从未发生过，<br/>
其他节点才会认可该区块。<br/>
因此在区块链中，“双花”变的非常困难。</p>

<p><strong>“拜占庭将军”问题</strong>：<br/>
拜占庭问题的核心问题是当战场上多个将军互相并不信任彼此（存在叛徒）时，<br/>
互相相隔甚远无法碰头，但却要保证进攻时间一致，<br/>
所以某种分布式远程协调沟通机制尤为重要。</p>

<p>如果每个将军向其他九个将军派出一名信使，也就是10 个将军每个派出了9 名信使，<br/>
即为总计90 次的传输，<br/>
每个将军会分别收到9 条信息，可能每一封都附着不同的进攻时间。</p>

<p>此外，部分将军会答应超过一个的攻击时间，故意背叛发起人，<br/>
所以他们将重新广播超过一条的信息链。</p>

<p>这个系统迅速变成不可靠信息和攻击时间相互矛盾的混合体。<br/>
区块链通过为发送信息加入了成本，也就是基于计算一个随机哈希算法<br/>
得到遗传64 位的随机数字和字母组成的字符串的“工作量证明”，<br/>
并加入了一个随机元素以保证在一个时间只有一个将军可以进行广播，<br/>
解决了这个问题。</p>

<h3 id="toc_7">五、区块链的未来</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-TabBar]]></title>
    <link href="www.freefook.com/15235114845539.html"/>
    <updated>2018-04-12T13:38:04+08:00</updated>
    <id>www.freefook.com/15235114845539.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">创建一个标准小程序空项目</h4>

<h5 id="toc_1">在app.json文件里写入如下代码</h5>

<pre><code>{
  &quot;pages&quot;: [
    &quot;pages/homePage/homePage&quot;,
    &quot;pages/minePage/minePage&quot;,
    &quot;pages/shoppingCartPage/shoppingCartPage&quot;,
    &quot;pages/index/index&quot;
  ],
  &quot;window&quot;: {
    &quot;backgroundTextStyle&quot;: &quot;light&quot;,
    &quot;navigationBarBackgroundColor&quot;: &quot;#fff&quot;,
    &quot;navigationBarTitleText&quot;: &quot;小程序商城&quot;,
    &quot;navigationBarTextStyle&quot;: &quot;black&quot;
  },
  &quot;tabBar&quot;: {
    &quot;color&quot;: &quot;#8a8a8a&quot;,
    &quot;selectedColor&quot;: &quot;#000&quot;,
    &quot;backgroundColor&quot;: &quot;#fff&quot;,
    &quot;list&quot;: [
      {
        &quot;iconPath&quot;: &quot;images/tabbar/home_1.png&quot;,
        &quot;selectedIconPath&quot;: &quot;images/tabbar/home_2.png&quot;,
        &quot;pagePath&quot;: &quot;pages/homePage/homePage&quot;,
        &quot;text&quot;: &quot;首页&quot;
      },
      {
        &quot;iconPath&quot;: &quot;images/tabbar/gwc_1.png&quot;,
        &quot;selectedIconPath&quot;: &quot;images/tabbar/gwc_2.png&quot;,
        &quot;pagePath&quot;: &quot;pages/shoppingCartPage/shoppingCartPage&quot;,
        &quot;text&quot;: &quot;购物车&quot;
      },
      {
        &quot;iconPath&quot;: &quot;images/tabbar/wode_1.png&quot;,
        &quot;selectedIconPath&quot;: &quot;images/tabbar/wode_2.png&quot;,
        &quot;pagePath&quot;: &quot;pages/minePage/minePage&quot;,
        &quot;text&quot;: &quot;我的&quot;
      }
    ]
  },
  &quot;networkTimeout&quot;: {
    &quot;request&quot;: 10000,
    &quot;downloadFile&quot;: 10000
  },
  &quot;debug&quot;: false
}
</code></pre>

<h4 id="toc_2">运行界面 tabbar</h4>

<p><img src="media/15235114845539/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-06%20%E4%B8%8B%E5%8D%884.14.36.png" alt="屏幕快照 2018-12-06 下午4.14.36"/></p>

<h5 id="toc_3">在app.wxss文件里写入如下代码</h5>

<pre><code>page {
  font-size: 14px;
  background-color: #f8f8f8;
  font-family: -apple-system-font, Helvetica Neue, Helvetica, sans-serif;
}

.container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  box-sizing: border-box;
}

.weui-bg-color {
  background-color: #f8f8f8;
}

.weui-Font1 {
  font-size: 16px;
}

.weui-Font2 {
  font-size: 14px;
}

.weui-Font3 {
  font-size: 12px;
}

.weui-Font4 {
  font-size: 10px;
}

.weui-Font5 {
  font-size: 8px;
}

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-轮播]]></title>
    <link href="www.freefook.com/15235125175960.html"/>
    <updated>2018-04-12T13:55:17+08:00</updated>
    <id>www.freefook.com/15235125175960.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">第一步：在.wxml文件里写入如下代码</h4>

<pre><code>
&lt;!-- indicator-dots     Boolean     false   是否显示面板指示点 --&gt;
    &lt;!-- autoplay   Boolean     false   是否自动切换 --&gt;
    &lt;!-- interval   Number  5000    自动切换时间间隔 --&gt;
    &lt;!-- duration   Number  500     滑动动画时长 --&gt;
    &lt;!-- circular   Boolean     false   是否采用衔接滑动 --&gt;
    
&lt;swiper indicator-dots=&quot;{{indicatorDots}}&quot;  
        autoplay=&quot;{{autoplay}}&quot; 
        interval=&quot;{{interval}}&quot; 
        duration=&quot;{{duration}}&quot; 
        circular=&quot;true&quot;&gt;  

      &lt;block wx:for=&quot;{{imgUrls}}&quot; wx:key=&quot;{{item}}&quot; wx:for-index=&quot;index&quot;&gt;  
        &lt;swiper-item&gt;  
            &lt;navigator url=&quot;{{item.link}}&quot; hover-class=&quot;navigator-hover&quot;&gt; 
            &lt;image src=&quot;{{item.url}}&quot; 
                   class=&quot;slide-image&quot;/&gt;  
            &lt;/navigator&gt;  
        &lt;/swiper-item&gt;  
      &lt;/block&gt;  

&lt;/swiper&gt; 

</code></pre>

<h4 id="toc_1">第二步：在.wxss文件里设置如下属性</h4>

<pre><code>   swiper{
    height: 200px;
   } 

    .slide-image{  
        width: 100%;  
        height: 200px;
    }  
</code></pre>

<h4 id="toc_2">第三步：在.js文件里设置如下数据 和轮播属性设置</h4>

<pre><code> imgUrls: [
      {
        url: &#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;
      }, {
        url: &#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;
      }, {
        url: &#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;
      }   

    ],
    indicatorDots: true,
    autoplay: true,
    
    interval: 3000,
    duration: 500,

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下的Vue环境搭建]]></title>
    <link href="www.freefook.com/15421818269588.html"/>
    <updated>2018-11-14T15:50:26+08:00</updated>
    <id>www.freefook.com/15421818269588.html</id>
    <content type="html"><![CDATA[
<p>官网地址：<a href="https://vuejs.org/">https://vuejs.org/</a></p>

<h4 id="toc_0">安装清单：</h4>

<ul>
<li><strong>Homebrew：</strong>  Mac系统下的包管理器</li>
<li><strong>Node.js:</strong>    JavaScript运行环境(runtime)</li>
<li><strong>npm:</strong>        Nodejs下的包管理器</li>
<li><strong>webpack:</strong>    Vue的组件是通过 .vue自定义的组件，需要打包成 .js文件</li>
<li><strong>Vue-cli:</strong>    用来生成模板的Vue工程</li>
</ul>

<h5 id="toc_1">打开Mac下的终端</h5>

<h4 id="toc_2">安装Homebrew</h4>

<pre><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;

安装成功后查看一下版本信息输入: brew -v
</code></pre>

<h4 id="toc_3">安装Node.js</h4>

<pre><code>brew install nodejs

也可以下载后安装,下载地址：https://nodejs.org/en/download/

安装成功后查看一下版本信息输入: node -v
</code></pre>

<h4 id="toc_4">获取Nodejs安装目录访问权限</h4>

<pre><code>sudo chmod -R 777 /usr/local/lib/node_modules/
</code></pre>

<h4 id="toc_5">安装npm (淘宝镜像)</h4>

<pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org

按回车执行，就可以用淘宝团队定制的cnpm代替默认的npm了
cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm

npm安装插件是从官网http://registry.npmjs.org下载对应的插件包
该网站服务器位于国外，所以经常下载缓慢或出现异常
阿里巴巴的淘宝团队,把npm官网的插件都同步到了中国的服务器
</code></pre>

<h4 id="toc_6">安装webpack</h4>

<pre><code>cnpm install webpack -g
</code></pre>

<h4 id="toc_7">全局安装vue脚手架 vue-cli@2</h4>

<pre><code>cnpm install vue-cli -g
</code></pre>

<h4 id="toc_8">分道扬镳之一</h4>

<h4 id="toc_9">创建一个vue的项目代码</h4>

<pre><code>执行命令1. cd  路径(想把项目创建在哪个文件夹下面)

vue-cli@2的初始化方式命令如下：
执行命令2. vue init webpack-simple demo1&lt;工程名字不能用中文,不要用大写&gt;

也可执行命令: vue init webpack demo1
这样会询问我们是否安装一些Vue依赖模块，也可以简单(webpack-simple)创建完项目,
需要的其他模块单独安装
</code></pre>

<p>当出现如下信息时，vue init已执行完毕</p>

<pre><code>To get started:
   cd firstVueProject(你创建的工程文件名)
   npm install
   npm run dev 
</code></pre>

<pre><code>依次执行命令：
执行命令3. cd firstVueProject(你创建的工程文件名)
执行命令4. cnpm install (可一路回车Enter)
</code></pre>

<pre><code>单独安装模块: 可安装(或不安装) 
vue 路由模块vue-router
网络请求模块vue-resource
其他模块可继续加在一起执行命令：
cnpm install vue-router vue-resource --save-dev

启动项目
执行命令5. cnpm run dev

至此结束
</code></pre>

<h4 id="toc_10">打开项目</h4>

<pre><code>cd 项目地址
cnpm install
cnpm run dev

如果npm 报错,尝试
1. cnpm cache clean --force
2. rm -rf node_modules folder
3. cnpm install
4. cnpm run dev
</code></pre>

<h4 id="toc_11">注解</h4>

<pre><code>1. npm 开启了npm run dev以后怎么退出或关闭？
ctrl+c

2. --save-dev
自动把模块和版本号添加到模块配置文件package.json中的依赖里devdependencies部分

3. --save-dev 与 --save 的区别
--save     安装包信息将加入到dependencies（生产阶段的依赖）
--save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它

4. 在项目开发完成之后，可以输入 npm run build 来进行打包工作
</code></pre>

<h4 id="toc_12">分道扬镳之二</h4>

<h4 id="toc_13">创建一个基于mpvue的小程序项目代码</h4>

<pre><code>执行命令1. cd  路径(想把项目创建在哪个文件夹下面)

执行命令2. vue init mpvue/mpvue-quickstart firstVueProject(不要使用中文)
</code></pre>

<p>接下来是项目的一些配置信息，可一路回车Enter<br/>
当出现如下信息，模板代码已经下载结束</p>

<pre><code>Vue-cli . Generated &quot;firstVueProject(你创建的工程文件名)&quot; .
To get started:
   cd firstVueProject(你创建的工程文件名)
   npm install
   npm run dev 
Documentation can be found at http://mpvue.com
</code></pre>

<p>这时代码还缺少依赖库，继续执行</p>

<pre><code>执行命令3. cd firstVueProject(你创建的工程文件名)
执行命令4. cnpm install
</code></pre>

<h6 id="toc_14">cnpm install过程中---可能会出现npm update check failed</h6>

<pre><code>因为文件夹的权限问题导致的，执行如下命令:
sudo chown -R $USER:$(id -gn $USER) /home/{username}/.config
</code></pre>

<h6 id="toc_15">cnpm install过程中---可能会出现类似警告</h6>

<pre><code>npm WARN vue-loader@15.2.4 requires a peer of css-loader@* but none is installed. You must install peer dependencies yourself.
npm WARN vue-loader@15.2.4 requires a peer of vue-template-compiler@^2.0.0 but none is installed. You must install peer dependencies yourself.
</code></pre>

<p>需要安装css-loader 和vue-template-compiler</p>

<pre><code>执行如下命令:
cnpm i css-loader vue-template-compiler
</code></pre>

<p>终于到了最后，让这个代码运行起来，进入开发模式，执行命令：</p>

<pre><code>cnpm run dev
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vue项目结构]]></title>
    <link href="www.freefook.com/15422692424640.html"/>
    <updated>2018-11-15T16:07:22+08:00</updated>
    <id>www.freefook.com/15422692424640.html</id>
    <content type="html"><![CDATA[
<p><img src="media/15422692424640/20171126152702891.png" alt="20171126152702891"/></p>

<p><img src="media/15422692424640/20171126152742787.png" alt="20171126152742787"/></p>

<p><img src="media/15422692424640/20171126152635816.png" alt="20171126152635816"/></p>

<p>原文地址：<a href="https://www.jianshu.com/p/7006a663fb9f">https://www.jianshu.com/p/7006a663fb9f</a></p>

<p><strong>使用的编辑器是VSCode</strong></p>

<p><img src="media/15422692424640/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-11-15%20%E4%B8%8B%E5%8D%884.13.15.png" alt="屏幕快照 2018-11-15 下午4.13.15"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VSCode编译器 格式化.vue文件]]></title>
    <link href="www.freefook.com/15422706001586.html"/>
    <updated>2018-11-15T16:30:00+08:00</updated>
    <id>www.freefook.com/15422706001586.html</id>
    <content type="html"><![CDATA[
<p>vscode需要修改下<strong>首选项</strong>：<br/>
打开vscode，菜单栏选择 文件 -&gt; 首选项 -&gt; 设置<br/>
把下面的拷贝完整覆盖右侧用户设置</p>

<p>{</p>

<pre><code>&quot;window.zoomLevel&quot;: 0,
&quot;extensions.ignoreRecommendations&quot;: true,
&quot;emmet.syntaxProfiles&quot;: {
    &quot;vue-html&quot;: &quot;html&quot;,
    &quot;vue&quot;: &quot;html&quot;
},
&quot;vetur.validation.template&quot;: false,
&quot;eslint.options&quot;: {
    &quot;plugins&quot;: [&quot;html&quot;]
},
&quot;eslint.validate&quot;: [
    &quot;javascript&quot;,
    &quot;javascriptreact&quot;,
    &quot;html&quot;,
    &quot;vue&quot;
],
&quot;prettier.singleQuote&quot;: true,
&quot;prettier.semi&quot;: false,
&quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,
&quot;vetur.format.defaultFormatterOptions&quot;: {
   &quot;wrap_attributes&quot;: &quot;force-aligned&quot;
 }
</code></pre>

<p>} </p>

<p><strong>Alt+Shift+F 就可以格式化 .vue文件了</strong></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VSCode 前端常用插件推荐]]></title>
    <link href="www.freefook.com/15422741986731.html"/>
    <updated>2018-11-15T17:29:58+08:00</updated>
    <id>www.freefook.com/15422741986731.html</id>
    <content type="html"><![CDATA[
<h4 id="toc_0">通用插件</h4>

<p>HTML Snippets ：超级实用且初级的 H5代码片段以及提示<br/>
HTML CSS Support ：让 html 标签上写class 智能提示当前项目所支持的样式</p>

<p>Path Intellisense ： 自动路径补全</p>

<p>Project Manager ： 在多个项目之前快速切换的工具<br/>
vscode-icon ： 让 vscode 资源树目录加上图标<br/>
beautify ： 格式化代码的工具</p>

<h4 id="toc_1">Vue推荐插件</h4>

<p>vetur ： 语法高亮、智能感知、Emmet等</p>

<p>VueHelper ： snippet代码片段<br/>
Vue 2 Snippets ：vue快捷键提示</p>

<p>Auto Close Tag ： 自动补全html标签<br/>
Auto Rename Tag ：同步更改html尾标签</p>

<p>ESLint ：ESlint语法提示<br/>
JavaScript (ES6) snippets ：ES6语法快捷键支持</p>

<p>Stylus ：主要支持vue文件下stylus CSS语法提示<br/>
language-stylus ：stylus语法提示</p>

<p>File Peek ： 文件路径跳转<br/>
Path Autocomplete ：文件自动路径提示</p>

<p>VS Color Picker ：color: #fff 自动提示<br/>
Import Cost ： 引入包大小计算,对于项目打包后体积掌握很有帮助</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-经典列表布局]]></title>
    <link href="www.freefook.com/15235133751593.html"/>
    <updated>2018-04-12T14:09:35+08:00</updated>
    <id>www.freefook.com/15235133751593.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">在创建的home.wxml文件里写入如下布局</h5>

<pre><code>&lt;view&gt;  
  &lt;scroll-view scroll-y=&quot;true&quot; style=&quot;height:100%&quot; &gt;  
    &lt;view wx:for=&quot;{{array}}&quot; style=&quot;width:100%&quot;&gt;  
    &lt;image id =&quot;{{index}}&quot; 
           src =&quot;{{item}}&quot; 
           mode =&quot;aspectFill&quot; 
           style =&quot;width:100%;height:150px&quot;      
           bindtap =&quot;tapName&quot; 
           data-img =&quot;{{item}}&quot;&gt;&lt;/image&gt; 
    &lt;/view&gt;  
  &lt;/scroll-view&gt;  
&lt;/view&gt; 
</code></pre>

<h5 id="toc_1">在home.js 文件里放入数据</h5>

<pre><code>/**
   * 页面的初始数据
   */
  data: {
    array: [
    &quot;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&quot;,
    &quot;http://img06.tooopen.com/images/20160818/tooopen_sy_175833047715.jpg&quot;,
    &quot;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&quot;
    ]  
  },

  //列表上图片点击方法，跳转详情页面
  tapName: function (event) {
    console.log(event.target.dataset.img)
    wx.navigateTo({
      url: &#39;../detail/detail&#39;
    })
  },
  
  
/**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {

    console.log(&quot;打印参数，上个页面传过来的参数id---&gt;&quot;)
    console.log(options.id)  

  },
  
</code></pre>

<h5 id="toc_2">在home.json文件里写上navigationBarTitleText</h5>

<pre><code>{
  &quot;navigationBarTitleText&quot;: &quot;知之为知之&quot;
}
</code></pre>

<h4 id="toc_3">运行界面 列表 list</h4>

<p><img src="media/15235114845539/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-12%20%E4%B8%8B%E5%8D%881.50.12.png" alt="屏幕快照 2018-04-12 下午1.50.12"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序建项-网格布局]]></title>
    <link href="www.freefook.com/15236096586360.html"/>
    <updated>2018-04-13T16:54:18+08:00</updated>
    <id>www.freefook.com/15236096586360.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">在wxml里加入如下代码：</h5>

<pre><code>
  &lt;!-- 商品网格布局 --&gt;
  &lt;view class=&#39;goods-grid-view&#39;&gt;
    &lt;block wx:for=&quot;{{12}}&quot; wx:key=&quot;{{item}}&quot; wx:for-item=&quot;item&quot;&gt;
      &lt;view class=&#39;goods-grid-blockview&#39; data-item=&#39;{{item}}&#39; catchtap=&#39;onGoodsTap&#39;&gt;
        &lt;view class=&#39;goods-grid-container&#39;&gt;
          &lt;image class=&#39;goods-img&#39; mode=&#39;aspectFill&#39; src=&quot;{{&#39;http://img0.imgtn.bdimg.com/it/u=3069472720,3661376600&amp;fm=214&amp;gp=0.jpg&#39;}}&quot;&gt;&lt;/image&gt;
          &lt;text class=&#39;goods-title weui-Font2&#39;&gt;{{&quot;我是商品名&quot;}}&lt;/text&gt;
          &lt;text class=&#39;goods-title weui-Font3&#39;&gt;{{&quot;我是商品介绍么&quot;}}&lt;/text&gt;
          &lt;text class=&#39;goods-price weui-Font2&#39; style=&#39;color: #d0ae97&#39;&gt;¥{{200}}\r\t\r\t\r\t&lt;text class=&#39;goods-price weui-Font2&#39; style=&#39;text-decoration:line-through;color: lightgray&#39;&gt;¥{{260}}&lt;/text&gt;&lt;/text&gt;
        &lt;/view&gt;
      &lt;/view&gt;
    &lt;/block&gt;
  &lt;/view&gt;

</code></pre>

<h5 id="toc_1">在wxss里加入如下代码：</h5>

<pre><code>
/* 网格布局 */

.goods-grid-view {
  background-color: white;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: auto;
  margin-left: 10rpx;
  margin-right: 10rpx;
}

.goods-grid-blockview {
  width: 50%;
  background-color: white;
}

.goods-grid-container {
  display: flex;
  flex-direction: column;
  margin-top: 20rpx;
  margin-left: 10rpx;
  margin-right: 10rpx;
}

.goods-img {
  width: 100%;
  height: 340rpx;
  border-radius: 10rpx;
  overflow: hidden;
}

.goods-title {
  margin-top: 15rpx;
  margin-bottom: 10rpx;
  display: -webkit-box;
  align-content: center;
  text-align: left;
  overflow: hidden;
  text-overflow: -o-ellipsis-lastline;
  text-overflow: ellipsis;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  width: 340rpx;
}

.goods-price {
  text-align: left;
}

</code></pre>

<h5 id="toc_2">运行效果</h5>

<p><img src="media/15236096586360/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-12-06%20%E4%B8%8B%E5%8D%884.02.21.png" alt="屏幕快照 2018-12-06 下午4.02.21"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信平台与微信小程序]]></title>
    <link href="www.freefook.com/15399429964472.html"/>
    <updated>2018-10-19T17:56:36+08:00</updated>
    <id>www.freefook.com/15399429964472.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">微信平台有哪些？</h5>

<p>微信公众平台：<br/>
<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p>

<p>微信支付的商户平台：<br/>
<a href="https://pay.weixin.qq.com/index.php/core/home/login?return_url=%2F">https://pay.weixin.qq.com/index.php/core/home/login?return_url=%2F</a><br/>
注：小程序里支付只能用小程序支付方式，必须和小程序里开通的支付的商户一致；</p>

<p>支付接口文档<br/>
<a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></p>

<p>微信开放平台<br/>
<a href="https://open.weixin.qq.com/cgi-bin/index?t=home/index&amp;lang=zh_CN">https://open.weixin.qq.com/cgi-bin/index?t=home/index&amp;lang=zh_CN</a></p>

<p>微信开发者平台：<br/>
<a href="http://weixin.qq.com/">http://weixin.qq.com/</a></p>

<p>微信硬件平台：<br/>
<a href="https://iot.weixin.qq.com/">https://iot.weixin.qq.com/</a></p>

<p>腾讯的广告平台：<br/>
<a href="http://e.qq.com/ads/">http://e.qq.com/ads/</a></p>

<p>腾讯开放平台：<br/>
<a href="http://open.tencent.com/">http://open.tencent.com/</a></p>

<h5 id="toc_1">腾讯自家小程序全家桶</h5>

<pre><code>小程序示例   第一个小程序
小程序开发助手
小程序数据助手
小游戏数据助手
公众平台助手
微信发票助手
王卡申请助手

QQ游戏
腾讯爱玩
全民大乐斗
企鹅电竞+
腾讯动漫+

腾讯+  产品体验官
腾讯网
腾讯文档
腾讯企业邮箱

腾讯云助手
腾讯视频云
腾讯AI体验中心
腾讯云AI体验中心
腾讯优图AI开发平台
</code></pre>

<h5 id="toc_2">其他特色小程序</h5>

<pre><code>摩拜单车： 接入是小程序线下落地的一次大的尝试
KFC，麦当劳： 点餐实用型的线下场景
家乐福中国：小程序有优惠
沃尔玛：小程序可自助结账

一时风靡的答题类，头脑王者

青芒杂志
一条视频
毒蛇电影社区

企鹅电竞+
斗鱼直播
虎牙直播
YY直播+
</code></pre>

<h3 id="toc_3">微信直播类小程序</h3>

<p>直播类小程序：</p>

<p>第一个直播小程序体验：蘑菇街女装精选（腾讯亲儿子）直播类电商，可评论；<br/>
分类：电商平台-&gt;公司：杭州卷瓜网络有限公司</p>

<p>腾讯NOW直播，首页简单的一个列表页，几个精彩推荐 ，是直播过的回放；<br/>
公司：深圳市腾讯计算机系统有限公司</p>

<p>企鹅电竞+：无登录授权，单纯的推荐一些直播，点击播放，不能评论；<br/>
公司：深圳市腾讯计算机系统有限公司</p>

<p>斗鱼直播：无登录授权，单纯的播放直播视频，不能评论；<br/>
公司：武汉瓯越网视有限公司</p>

<p>虎牙直播：无登录授权，单纯的播放直播视频，不能评论；<br/>
分类：直播  视频 -&gt;公司：广州华多网络科技有限公司</p>

<p>龙珠直播官方平台：有登录，我的页面无任何功能，单纯的播放直播视频，有评论和弹幕；<br/>
分类：直播-&gt;公司：上海聚力传媒技术有限公司</p>

<p>YY直播+：  提示微信授权，无登录信息和用户页面，单纯的播放直播视频，可评论; <br/>
分类：视频 -&gt;公司：广州华多网络科技有限公司</p>

<p>短视频小程序平台：</p>

<p>西瓜视频集：顶部分类推荐，生活，搞笑，影视，历史，开眼 / 点击播放，可点赞评论；<br/>
分类：视频 -&gt;公司：淮安皓威网络科技有限公司</p>

<p>火山搞笑视频集：和西瓜视频集一样！！！<br/>
分类：视频 -&gt;公司：淮安皓威网络科技有限公司</p>

<p>美拍：页面效果-&gt;上下滑动切换，可评论点赞，诱导下载app,诱导分享；<br/>
分类：视频 -&gt;公司：厦门美图网科技有限公司</p>

<p>秒拍视频lite : 有登录我的页面，记录足迹和收藏，可评论， 评论页面low；<br/>
分类：图片、音频、视频 -&gt;公司：泰和县文田创新网络工作室</p>

<p>小咖秀lite：一个列表页，点击进详情播放，有评论列表(其他平台)，小程序内不能评论；<br/>
分类：视频 -&gt;公司：小咖秀（北京）科技有限公司</p>

<p>一条视频：推荐列表，和专题分类；<br/>
分类：资讯 -&gt;公司：上海一条网络科技有限公司</p>

<p>视频平台：</p>

<p>腾讯视频：内容较丰富；</p>

<p>腾讯视频VIP：精简版；</p>

<p>爱奇艺视频：内容较丰富；</p>

<p>芒果TV视频：精简版；<br/><br/>
分类：视频 -&gt;公司：湖南快乐阳光互动娱乐传媒有限公司</p>

<p>搜狐视频官方：精简版，类似西瓜视频集； <br/>
分类：视频、时政信息 -&gt;公司：北京搜狐互联网信息服务有限公司</p>

<p>56视频官方：精简版，类似西瓜视频集；<br/>
分类：视频 -&gt;公司：广州市千钧网络科技有限公司</p>

<p>其他：</p>

<p>VUE视频，可调用系统相机拍摄，上传！！！<br/>
分类：图片、音频、视频 -&gt;公司：北京跃然纸上科技有有限公司</p>

<p>火山视频影院：个人开发，内容电影，电视剧，综艺信息介绍，<br/>
详情页：注明由于小程序限制，无法直接播放，提供的复制观看链接；</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[排序]]></title>
    <link href="www.freefook.com/15198806151662.html"/>
    <updated>2018-03-01T13:03:35+08:00</updated>
    <id>www.freefook.com/15198806151662.html</id>
    <content type="html"><![CDATA[
<pre><code> sizeof 判断数据类型长度符的关键字  简单的说其作用就是返回一个对象或者类型所占的内存字节数
</code></pre>

<h4 id="toc_0">选择排序</h4>

<pre><code>主要思想：
 对比数组中前一个元素跟后一个元素的大小，
 如果后面的元素比前面的元素小则用一个变量k来记住他的位置，
 接着第二次比较，前面“后一个元素”现变成了“前一个元素”，
 继续跟他的“后一个元素”进行比较如果后面的元素比他要小则用变量k记住它在  数组中的位置(下标)，
 等到循环结束的时候，我们应该找到了最小的那个数的下标了，
 然后进行判断，如果这个元素的下标不是第一个元素的下标，
 就让第一个元素跟他交换一下值，
 这样就找到整个数组中最小的数了。
 然后找到数组中第二小的数，让他跟数组中第二个元素交换一下值，以此类推。
 
 总之一句话，拿第一个数和后面的所有数比，谁小记录上下标，用这个小的继续和后面的比，直到比完所有。
 n个乱序-&gt;选择排序可经过n-1趟直接选择排序得到有序结果
</code></pre>

<pre><code>#include&lt;stdio.h&gt;
void select_sort(int arr[],int size)
{
    int i=0,j=0;
    int k=0;
    for(i=0;i&lt;size;i++){
        k=i;
        for(j=i+1;j&lt;size;j++){
           //结果输出想从小到大，还是从大到小，改这个&gt; or &lt;;
            if(arr[k]&lt;arr[j]){
                k=j;
            }

        }
        if(k!=i){
            int tmp=arr[k];
            arr[k]=arr[i];
            arr[i]=tmp;
        }
    }
}
int main()
{
    int arr[]={3,6,1,9,4,2,0,5,8,7};
    int len=sizeof(arr)/sizeof(arr[0]);
    select_sort(arr,len);
    int i=0;
    for(i=0;i&lt;len;i++){
        printf(&quot;%d &quot;,arr[i]);
    }
    printf(&quot;\n&quot;);
    return 0;
}
</code></pre>

<h4 id="toc_1">冒泡排序</h4>

<pre><code> 比较相邻的元素。如果第一个比第二个大，就交换他们两个。
 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。
 针对所有的元素重复以上的步骤，除了最后一个。
 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。
</code></pre>

<pre><code>#include&lt;stdio.h&gt;
void bubble_sort(int arr[],int size)
{
    int i=0,j=0;
    for(i=0;i&lt;size;i++){
        for(j=0;j&lt;size-i-1;j++){
            if(arr[j]&gt;arr[j+1]){
                int tmp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=tmp;
            }
        }
    }
}
int main()
{
    int arr[]={3,6,1,9,4,2,0,5,8,7};
    int len=sizeof(arr)/sizeof(arr[0]);
    bubble_sort(arr,len);
    int i=0;
    for(i=0;i&lt;len;i++){
        printf(&quot;%d &quot;,arr[i]);
    }
    printf(&quot;\n&quot;);
    return 0;
}
</code></pre>

<h4 id="toc_2">快速排序</h4>

<pre><code> 第一遍快速排序不会直接得到最终结果，
 只会把比k大和比k小的数分到k的两边。
 为了得到最后结果，需要再次对下标2两边的数组分别执行此步骤，
 然后再分解数组，直到数组不能再分解为止（只有一个数据），
 才能得到正确结果。
 
 总结：分别从初始序列两端开始，先从右往左找一个小于“数组第一个”的数，再从左往右找一个大于“数组第一个”的数，然后交换他们；

跳跃式交换，进化了冒泡的相邻交换，数据量多的无序数组排序时才提现出效果
二分思想

</code></pre>

<pre><code>#include&lt;stdio.h&gt;
void quick_sort(int arr[],int left,int right)
{
    if(left&gt;=right){
        return;
    }
    int key=arr[left];
    int begin=left;
    int end=right;
    while(begin!=end){
        while(begin&lt;end &amp;&amp; arr[end]&gt;=key){
            end--;
        }
        if(end&gt;begin){
            arr[begin]=arr[end];
        }
        while(begin&lt;end &amp;&amp; arr[begin]&lt;=key){
            begin++;
        }
        if(begin&lt;end){
            arr[end]=arr[begin];
        }
    }
    arr[begin]=key;
    quick_sort(arr,left,begin-1);
    quick_sort(arr,begin+1,right);
}
int main()
{
    int arr[]={3,6,1,9,4,2,0,5,8,7};
    quick_sort(arr,0,9);
    int i=0;
    for(i=0;i&lt;10;i++){
        printf(&quot;%d &quot;,arr[i]);
    }
    printf(&quot;\n&quot;);
    return 0;
}
</code></pre>

<h4 id="toc_3">插入排序</h4>

<pre><code>插入排序有以下几种方式：直接插入排序，二分插入排序（又称折半插入排序），链表插入排序，希尔排序（又称缩小增量排序）

示例直接插入排序，
用数组第二个和第一个比，如果小，就插入第一位位置；
用数组第三个和第二个比，如果小，就插入第二个位置；
                    如果大，就留在原位置；
                    依次类推；
</code></pre>

<pre><code>#include&lt;stdio.h&gt;
void insert_sort(int arr[],int size)
{
    int i=0,j=0;
    int tmp=0;
    for(i=1;i&lt;size;i++){
        tmp=arr[i];
        j=i;
        while(j&gt;0 &amp;&amp; arr[j-1]&gt;tmp){
            arr[j]=arr[j-1];
            j--;
        }
        arr[j]=tmp;
    }
}
int main()
{
    int arr[]={3,6,1,9,4,2,0,5,8,7};
    int len=sizeof(arr)/sizeof(arr[0]);
    insert_sort(arr,len);
    int i=0;
    for(i=0;i&lt;len;i++){
        printf(&quot;%d &quot;,arr[i]);
    }
    printf(&quot;\n&quot;);
    return 0;
}
</code></pre>

<h4 id="toc_4">希尔排序</h4>

<pre><code>#include&lt;stdio.h&gt;
void shell_insert_sort(int arr[],int size)
{
    int gap=0;
    int i=0,j=0,k=0;
    for(gap=size/2;gap&gt;0;gap/=2){
        //for(i=0;i&lt;gap;i++){
            for(j=gap;j&lt;size;j++){
                int tmp=arr[j];
                k=j;
                while(k-gap&gt;=0 &amp;&amp; arr[k-gap]&gt;tmp){
                    arr[k]=arr[k-gap];
                    k-=gap;
                }
                arr[k]=tmp;
            }
        //}
    }
}
int main()
{
    int arr[]={3,6,1,9,4,2,0,5,8,7};
    int len=sizeof(arr)/sizeof(arr[0]);
    shell_insert_sort(arr,len);
    int i=0;
    for(i=0;i&lt;len;i++){
        printf(&quot;%d &quot;,arr[i]);
    }
    printf(&quot;\n&quot;);
    return 0;
}
</code></pre>

<h4 id="toc_5">归并排序（合并排序）</h4>

<pre><code>#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
#include&lt;stdlib.h&gt;
void merge(int* src,int *dst,int begin,int mid,int end)
{
    int begin1=begin;
    int begin2=mid;
    int index=begin;
    while(begin1&lt;mid &amp;&amp; begin2&lt;end){
        if(src[begin1]&lt;src[begin2]){
            dst[index++]=src[begin1++];
        }else{
            dst[index++]=src[begin2++];
        }
    }
    while(begin1&lt;mid){
        dst[index++]=src[begin1++];
    }
    while(begin2&lt;end){
        dst[index++]=src[begin2++];
    }
    memcpy(src+begin,dst+begin,(end-begin)*sizeof(int));
}
void _merge_sort(int *arr,int* tmp,int left,int right)
{
    if(left+1&gt;=right){
        return;
    }
    int mid=left+(right-left)/2;
    _merge_sort(arr,tmp,left,mid);
    _merge_sort(arr,tmp,mid,right);
    merge(arr,tmp,left,mid,right);
}
void merge_sort(int* arr,int size)
{
    int* tmp=(int*)malloc(size*sizeof(int));
    _merge_sort(arr,tmp,0,size);
    free(tmp);
}
int main()
{
    int arr[]={3,6,1,9,4,2,0,5,8,7};
    int len=sizeof(arr)/sizeof(arr[0]);
    merge_sort(arr,len);
    int i=0;
    for(i=0;i&lt;len;i++){
        printf(&quot;%d &quot;,arr[i]);
    }
    printf(&quot;\n&quot;);

    return 0;
}
</code></pre>

<h4 id="toc_6">堆排序</h4>

<pre><code>#include&lt;stdio.h&gt;
void swap(int *a,int *b)
{
    int tmp=*a;
    *a=*b;
    *b=tmp;
}
void adjust_down(int arr[],int root,int size)
{
    int parent=root;
    int left=root*2+1;
    int right=left+1;
    while(left&lt;size){
        int max=left;
        if(right&lt;size &amp;&amp; arr[right]&gt;arr[max]){
            max=right;
        }
        if(arr[max]&gt;arr[parent]){
            swap(&amp;arr[max],&amp;arr[parent]);
            parent=max;
            left=parent*2+1;
            right=left+1;
        }
        else{
            break;
        }
    }
}
//make min heap
void heap_sort(int arr[],int size)
{
    int begin=0;
    for(begin=size/2-1;begin&gt;=0;--begin){
        adjust_down(arr,begin,size);
    }
    int end=size-1;
    while(end&gt;0){
        swap(&amp;arr[0],&amp;arr[end]);
        adjust_down(arr,0,end);
        --end;
    }
}
int main()
{
    int arr[10]={3,7,1,4,2,8,5,0,9,6};
    heap_sort(arr,10);
    int i=0;
    for(;i&lt;10;i++){
        printf(&quot;%d &quot;,arr[i]);
    }
    printf(&quot;\n&quot;);
    return 0;
}

</code></pre>

<p><img src="media/15198806151662/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-01%20%E4%B8%8B%E5%8D%883.45.58.png" alt="屏幕快照 2018-03-01 下午3.45.58"/></p>

<p>选择排序、快速排序、希尔排序、堆排序不是稳定的排序算法，<br/>
冒泡排序、插入排序、归并排序 是稳定的排序算法。</p>

<p>在原序列中，ri=rj，且ri在rj之前，而在排序后的序列中，ri仍在rj之前，则称这种排序算法是稳定的；否则称为不稳定的。</p>

<p>稳定都是相对的，不是绝对的稳定</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信小程序运行机制]]></title>
    <link href="www.freefook.com/15287848933165.html"/>
    <updated>2018-06-12T14:28:13+08:00</updated>
    <id>www.freefook.com/15287848933165.html</id>
    <content type="html"><![CDATA[
<p>微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。</p>

<h4 id="toc_0">小程序未发布时有权限-需添加用户身份</h4>

<pre><code>管理入口位于：小程序管理后台 - 用户身份 – 成员管理

一个团队进行小程序的开发，那么团队成员的身份管理是很有必要的。
管理员可在小程序管理后台统一管理项目成员（
包括开发者、体验者及其他成员）、
设置项目成员的权限，包括：开发者/体验者权限、登录小程序管理后台、开发管理、查看小程序数据分析等。
管理入口位于：小程序管理后台 - 用户身份 – 成员管理
</code></pre>

<h4 id="toc_1">小程序运行机制</h4>

<pre><code>热启动
 小程序启动会有两种情况，一种是「冷启动」，一种是「热启动」。
 假如用户已经打开过某小程序，然后在一定时间内再次打开该小程序，
 此时无需重新启动，只需将后台态的小程序切换到前台，
冷启动
 冷启动指的是用户首次打开或小程序被微信主动销毁后再次打开的情况，
 此时小程序需要重新加载启动。

 当小程序进入后台，客户端会维持一段时间的运行状态，超过一定时间后
 （目前是5分钟）会被微信主动销毁
 当短时间内（5s）连续收到两次以上收到系统内存告警，会进行小程序的销毁
</code></pre>

<pre><code>小程序启动进入程序紧接着通过 
app.json 的 pages 字段就可以知道你当前小程序的所有页面路径:
默认启动app.json 的 pages 字段的第一个页面就是这个小程序的首页
</code></pre>

<h4 id="toc_2">小程序更新机制</h4>

<pre><code>小程序冷启动时如果发现有新版本，将会异步下载新版本的代码包，
并同时用客户端本地的包进行启动，
即新版本的小程序需要等下一次冷启动才会应用上。 
如果需要马上应用最新版本，
可以使用 wx.getUpdateManager API 进行处理。
</code></pre>

<h4 id="toc_3">小程序代码包大小的优化</h4>

<pre><code>小程序一开始时代码包限制为 1MB，但我们收到了很多反馈说代码包大小不够用，
经过评估后我们放开了这个限制，增加到 2MB 。
代码包上限的增加对于开发者来说，能够实现更丰富的功能，
但对于用户来说，也增加了下载流量和本地空间的占用。

分包加载

目前小程序分包大小有以下限制：
 •  整个小程序所有分包大小不超过 8M
 •  单个分包/主包大小不能超过 2M
对小程序进行分包，可以优化小程序首次启动的下载时间，
以及在多团队共同开发时可以更好的解耦协作。
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS审核被拒4.3]]></title>
    <link href="www.freefook.com/15403646176398.html"/>
    <updated>2018-10-24T15:03:37+08:00</updated>
    <id>www.freefook.com/15403646176398.html</id>
    <content type="html"><![CDATA[
<h5 id="toc_0">一种是过不了机审关被拒，一种是过不了人审关被拒。</h5>

<pre><code>iOS预审核，扫描api，及plist文件字符缺失等；
此处分两步，第一步为上传时苹果Application Loador等应用对于适配icon等的检查，
第二步为上传后苹果的功能性检查，例如配置了Push功能但有缺失
或者未打开功能，则会邮件提示等等；

iOS机审，主要是对代码进行机器审核，排查APP是否重复应用，此处扫描支付SDK等，及马甲情况，机器扫描主要看代码块

iOS人审，主要是由苹果审核人员对APP的内容、功能进行核验，防止APP有bug，
防止APP模仿其他应用，内容与其他APP重复，影响用户体验，
检测功能或者App体验测试，例如用测试账号登录App体验功能，
或其他是否明显bug等，ipv6也在此处检测；

</code></pre>

<h5 id="toc_1">区分机审 、人审</h5>

<pre><code>那么如何区分是机器审核还是人工审核呢？主要看APP被拒的信息：

1）如果是机器审核被拒，一般收到的被拒信息第一句话基本上是这样的：
Guideline4.3 - Design - Spam
Yourapp duplicates the content and functionality of apps submitted to the AppStore,
 which is considered a form of spam.

2）如果是人工审核被拒，一般收到的被拒信息第一句话基本上是这样的：
Guideline4.3 - Design - Spam
Wefound that your app provides the same feature set as other apps submitted tothe App Store, 
which is not appropriate to the App Store.
</code></pre>

<h5 id="toc_2">针对审核</h5>

<pre><code>1.原来账号里的APP的名字可以作废掉或者修改成其他的，
同时记得移除之前的APP，重新打个空包传上去，
icon图则用其他logo图置换掉

2.增加登录日志

3.主要的方法是添加垃圾代码，且代码的相似程度不高于45%，
  混淆工程地址：https://github.com/klaus01/KLGenerateSpamCode

4.工程中的文件夹的名字全部进行修改，类名修改，方法名修改

5.资源图片替换修改，适当添加一些无用的资源 

6.API名称，机扫二进制文件，也会对比API

7.换开发者账号，换不同账号提交审核

8.换 bundle id，换一个包再提交审核；

9. 一定要关注名字,icon,启动图;修改UI风格同时进行假页面的添加;

10.升级 version，升级一个版本号提交审核

11.修改产品分类

12.还需要注意相同的马甲包提交至少要间隔一天以上。

13.定期换电脑提包.换电脑的序列号.换VPN环境.定期换域名. 

</code></pre>

]]></content>
  </entry>
  
</feed>
